package capstoneproject2017;

/**
 *
 * @author Roberto
 */
//imports
import java.awt.*;
import java.awt.event.*;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class MainMenu extends javax.swing.JFrame {

    /**
     * Creates new form CapstoneProject2017
     */
    public MainMenu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane2 = new javax.swing.JDesktopPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jlblWelcome = new javax.swing.JLabel();
        jPaneMain = new javax.swing.JTabbedPane();
        pnlSales = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jtxtTransactionItemSearchID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jtxtTransactionItemSearchName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jbtnTransactionSearchItems = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jtDisplayTransactionComics = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtDisplayTransactionMiscItems = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jbtnTransactionSearchItems1 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jlDisplayTransactionItems = new javax.swing.JList<>();
        jbtnTransactionRemoveItem = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jtxtTSIQuantity = new javax.swing.JTextField();
        jtxtTSIPrice = new javax.swing.JTextField();
        jtxtTSINameTitle = new javax.swing.JTextField();
        jtxtTSIComicOrInventoryID = new javax.swing.JTextField();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jtxtQuantityInStock = new javax.swing.JTextField();
        jtxtQuantityInStock.setVisible(false);
        jbtnTransactionAddItem = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jtxtSubtotal = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jtxtTax = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jtxtTotal = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel9 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jbtnCompleteTransactionCash = new javax.swing.JButton();
        jtxtCash = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jbtnCompleteTransactionCredit = new javax.swing.JButton();
        jtxtCredit = new javax.swing.JTextField();
        jbtnCancelTransaction = new javax.swing.JButton();
        pnlHoldProcessing = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        jtDisplayHoldCustomers = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane12 = new javax.swing.JScrollPane();
        jtDisplayHolds = new javax.swing.JTable();
        jbtnHoldAddToTransaction = new javax.swing.JButton();
        jbtnHoldDelete = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jbtnHoldClearSearch = new javax.swing.JButton();
        jbtnHoldSearch = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jtxtHoldPhone = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jtabInventory = new javax.swing.JTabbedPane();
        pnlComics = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jtxtInventoryComicID = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jtxtInvComicLookupID = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jtxtInventoryComicTitle = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jtxtInventoryAuthorName = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jtxtInventoryLastName = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jtxtInventoryPrice = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jtxtInventoryQuantity = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jtxtInventoryPublisherDate = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jtxtInventoryPublisher = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        btnInventorySave = new javax.swing.JButton();
        btnInventoryCancel = new javax.swing.JButton();
        jbtnInventoryComicAdd = new javax.swing.JButton();
        jPanel17 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        jtxtInventorySearchKey = new javax.swing.JTextField();
        jbtnInventorySearchComic = new javax.swing.JButton();
        jPanel18 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jtDisplayComicsTable = new javax.swing.JTable();
        jPanel19 = new javax.swing.JPanel();
        btnInventoryComicDisplayAll = new javax.swing.JButton();
        btnInventoryEdit = new javax.swing.JButton();
        btnInventoryClear = new javax.swing.JButton();
        btnInventoryAdd = new javax.swing.JButton();
        pnlMisc = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jtxtInventoryMiscInvID = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jtxtInvMiscLookupID = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jtxtInventoryMiscProductName = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        jtxtInventoryMiscProductPrice = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jtxtInventoryMiscProductQuantity = new javax.swing.JTextField();
        btnInventoryMiscSave = new javax.swing.JButton();
        btnInventoryMiscCancel = new javax.swing.JButton();
        jbtnInventoryMiscAdd = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        jtxtInventoryMiscSearchKey = new javax.swing.JTextField();
        jbtnInventorySearchMisc = new javax.swing.JButton();
        jPanel14 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jtDisplayMiscTable = new javax.swing.JTable();
        jPanel21 = new javax.swing.JPanel();
        btnInventoryMiscDisplayAll = new javax.swing.JButton();
        btnInventoryMiscEdit = new javax.swing.JButton();
        btnInventoryMiscClear = new javax.swing.JButton();
        btnInventoryMiscAdd = new javax.swing.JButton();
        pnlCustomer = new javax.swing.JPanel();
        jPanel24 = new javax.swing.JPanel();
        jbtnViewAllCustomers = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtDisplayCustomers = new javax.swing.JTable();
        jPanel25 = new javax.swing.JPanel();
        jLabel36 = new javax.swing.JLabel();
        jtxtCustomerFirstName = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        jtxtCustomerLastName = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        jtxtCustomerPhone = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        jtxtCustomerEmail = new javax.swing.JTextField();
        jbtnAddCustomer = new javax.swing.JButton();
        jbtnSearchCustomer = new javax.swing.JButton();
        pnlEmployee = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        jbtnSearchEmployeeByStatus = new javax.swing.JButton();
        jbtnSearchEmployeeByType = new javax.swing.JButton();
        jbtnSearchEmployee = new javax.swing.JButton();
        jbtnUpdateEmployee = new javax.swing.JButton();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jtxtEmployeeFirstNameU = new javax.swing.JTextField();
        jtxtEmployeeLastNameU = new javax.swing.JTextField();
        jtxtEmployeeAddressU = new javax.swing.JTextField();
        jtxtEmployeeCityU = new javax.swing.JTextField();
        jtxtEmployeeStateU = new javax.swing.JTextField();
        jtxtEmployeeZIPU = new javax.swing.JTextField();
        jtxtEmployeePhoneU = new javax.swing.JTextField();
        jcboxEmployeeTypeU = new javax.swing.JComboBox();
        jcboxEmployeeStatusU = new javax.swing.JComboBox();
        jScrollPane5 = new javax.swing.JScrollPane();
        jtDisplayEmployeesU = new javax.swing.JTable();
        jbtnSearchAllEmployees = new javax.swing.JButton();
        jPanel22 = new javax.swing.JPanel();
        jLabel53 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        jtxtEmployeeFirstName = new javax.swing.JTextField();
        jtxtEmployeeLastName = new javax.swing.JTextField();
        jtxtEmployeeAddress = new javax.swing.JTextField();
        jtxtEmployeeCity = new javax.swing.JTextField();
        jtxtEmployeeState = new javax.swing.JTextField();
        jtxtEmployeeZIP = new javax.swing.JTextField();
        jtxtEmployeePhone = new javax.swing.JTextField();
        jcboxEmployeeType = new javax.swing.JComboBox();
        jbtnGenerateUsername = new javax.swing.JButton();
        jLabel62 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        jtxtEmployeeUsername = new javax.swing.JTextField();
        jpwEmployeePass = new javax.swing.JPasswordField();
        jbtnAddEmployee = new javax.swing.JButton();
        pnlReports = new javax.swing.JPanel();
        jPanel26 = new javax.swing.JPanel();
        jLabel64 = new javax.swing.JLabel();
        jcbReportSelection = new javax.swing.JComboBox<>();
        jbtnReportGenerate = new javax.swing.JButton();
        jlblFilter = new javax.swing.JLabel();
        jtfFilter = new javax.swing.JTextField();
        jScrollPane13 = new javax.swing.JScrollPane();
        jtDisplayReports = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        setType(java.awt.Window.Type.UTILITY);

        jPanel1.setBackground(new java.awt.Color(124, 164, 215));

        jPanel2.setBackground(new java.awt.Color(248, 226, 140));
        jPanel2.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setText("SSALEFISH COMICS");

        jlblWelcome.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(537, 537, 537)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jlblWelcome, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jlblWelcome, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPaneMain.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N

        pnlSales.setBackground(new java.awt.Color(225, 236, 242));
        pnlSales.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel3.setBackground(new java.awt.Color(225, 236, 242));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jtxtTransactionItemSearchID.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel2.setText("Search Lookup Code:");

        jtxtTransactionItemSearchName.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel3.setText("Product Name or Comic Title:");

        jbtnTransactionSearchItems.setBackground(new java.awt.Color(248, 226, 140));
        jbtnTransactionSearchItems.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jbtnTransactionSearchItems.setText("Search Inventory");
        jbtnTransactionSearchItems.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnTransactionSearchItemsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtxtTransactionItemSearchName, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                            .addComponent(jtxtTransactionItemSearchID)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addComponent(jbtnTransactionSearchItems)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtTransactionItemSearchID, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(22, 22, 22)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtxtTransactionItemSearchName, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(jbtnTransactionSearchItems)
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(225, 236, 242));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jtDisplayTransactionComics.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jtDisplayTransactionComics.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Comic ID", "Lookup Code", "Title", "Price", "Quantity"
            }
        ));
        jtDisplayTransactionComics.addMouseListener(new MouseAdapter() {
            public void mousePressed(MouseEvent me) {
                JTable table =(JTable) me.getSource();
                Point p = me.getPoint();
                int row = table.rowAtPoint(p);
                if (me.getClickCount() == 1) {
                    try {
                        jtxtTSIComicOrInventoryID.setText(jtDisplayTransactionComics.getModel().getValueAt(row, 0).toString());
                        jtxtTSINameTitle.setText(jtDisplayTransactionComics.getModel().getValueAt(row, 2).toString().trim());
                        jtxtTSIPrice.setText(jtDisplayTransactionComics.getModel().getValueAt(row, 3).toString());
                        jtxtQuantityInStock.setText(jtDisplayTransactionComics.getModel().getValueAt(row, 4).toString());
                        jtxtTSIQuantity.setText("1");
                        jtxtTSIQuantity.selectAll();
                        jtxtTSIQuantity.requestFocus();

                        jtxtTransactionItemSearchID.setText("");
                        jtxtTransactionItemSearchName.setText("");
                        jtDisplayTransactionMiscItems.clearSelection();

                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(null, "Please search for or view all comics before attempting to make a selection from this table. ");
                    }
                }
            }
        });
        jScrollPane4.setViewportView(jtDisplayTransactionComics);

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel4.setText("Comics");

        jtDisplayTransactionMiscItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Inventory ID", "Lookup Code", "Item", "Price", "Quantity"
            }
        ));
        jtDisplayTransactionMiscItems.addMouseListener(new MouseAdapter() {
            public void mousePressed(MouseEvent me) {
                JTable table =(JTable) me.getSource();
                Point p = me.getPoint();
                int row = table.rowAtPoint(p);
                if (me.getClickCount() == 1) {
                    try {
                        jtxtTSIComicOrInventoryID.setText(jtDisplayTransactionMiscItems.getModel().getValueAt(row, 0).toString());
                        jtxtTSINameTitle.setText(jtDisplayTransactionMiscItems.getModel().getValueAt(row, 2).toString().trim());
                        jtxtTSIPrice.setText(jtDisplayTransactionMiscItems.getModel().getValueAt(row, 3).toString());
                        jtxtQuantityInStock.setText(jtDisplayTransactionMiscItems.getModel().getValueAt(row, 4).toString());
                        jtxtTSIQuantity.setText("1");
                        jtxtTSIQuantity.selectAll();
                        jtxtTSIQuantity.requestFocus();

                        jtxtTransactionItemSearchID.setText("");
                        jtxtTransactionItemSearchName.setText("");
                        jtDisplayTransactionComics.clearSelection();

                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(null, "Please search for or view all comics before attempting to make a selection from this table. ");
                    }
                }
            }
        });
        jScrollPane3.setViewportView(jtDisplayTransactionMiscItems);

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel5.setText("Misc. Items");

        jbtnTransactionSearchItems1.setBackground(new java.awt.Color(248, 226, 140));
        jbtnTransactionSearchItems1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jbtnTransactionSearchItems1.setText("View All Items");
        jbtnTransactionSearchItems1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnTransactionSearchItems1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 526, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(92, 92, 92)
                                .addComponent(jbtnTransactionSearchItems1)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabel4))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jbtnTransactionSearchItems1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel5.setBackground(new java.awt.Color(225, 236, 242));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jScrollPane6.setViewportView(jlDisplayTransactionItems);

        jbtnTransactionRemoveItem.setBackground(new java.awt.Color(248, 226, 140));
        jbtnTransactionRemoveItem.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jbtnTransactionRemoveItem.setText("Remove Item");
        jbtnTransactionRemoveItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnTransactionRemoveItemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6)
                .addContainerGap())
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(340, 340, 340)
                .addComponent(jbtnTransactionRemoveItem)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtnTransactionRemoveItem)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(225, 236, 242));
        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jLabel30.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel30.setText("ITEM DETAILS");

        jLabel47.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel47.setText("ITEM NAME");

        jtxtTSIQuantity.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        jtxtTSIPrice.setEditable(false);
        jtxtTSIPrice.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        jtxtTSINameTitle.setEditable(false);
        jtxtTSINameTitle.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        jtxtTSIComicOrInventoryID.setEditable(false);
        jtxtTSIComicOrInventoryID.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        jLabel50.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel50.setText("PRICE");

        jLabel51.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel51.setText("QUANTITY");

        jLabel52.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel52.setText("ITEM NUMBER");

        jtxtQuantityInStock.setEditable(false);
        jtxtQuantityInStock.setFocusable(false);

        jbtnTransactionAddItem.setBackground(new java.awt.Color(248, 226, 140));
        jbtnTransactionAddItem.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jbtnTransactionAddItem.setText("Add Item");
        jbtnTransactionAddItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnTransactionAddItemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel47)
                            .addComponent(jLabel52)
                            .addComponent(jtxtTSIComicOrInventoryID, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtxtTSINameTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel50)
                            .addComponent(jtxtTSIPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel51)
                                .addGap(45, 45, 45)
                                .addComponent(jtxtQuantityInStock, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jtxtTSIQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(jbtnTransactionAddItem, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(59, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel30)
                .addGap(18, 18, 18)
                .addComponent(jLabel47)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtxtTSINameTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel52)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtxtTSIComicOrInventoryID, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jLabel50)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jtxtTSIPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel51))
                    .addComponent(jtxtQuantityInStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtxtTSIQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtnTransactionAddItem)
                .addContainerGap())
        );

        jPanel7.setBackground(new java.awt.Color(225, 236, 242));
        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jtxtSubtotal.setEditable(false);
        jtxtSubtotal.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel6.setText("TOTAL:");

        jtxtTax.setEditable(false);
        jtxtTax.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel7.setText("SUBTOTAL:");

        jLabel8.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel8.setText("TAX:");

        jtxtTotal.setEditable(false);
        jtxtTotal.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel9.setText("Transaction Information");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(182, 182, 182))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jtxtSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jtxtTax, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtxtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxtTax, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );

        jPanel8.setBackground(new java.awt.Color(225, 236, 242));
        jPanel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jTabbedPane2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        jPanel9.setBackground(new java.awt.Color(225, 236, 242));

        jLabel14.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel14.setText("Cash Recieved:");

        jbtnCompleteTransactionCash.setBackground(new java.awt.Color(248, 226, 140));
        jbtnCompleteTransactionCash.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jbtnCompleteTransactionCash.setText("Process Transaction");
        jbtnCompleteTransactionCash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCompleteTransactionCashActionPerformed(evt);
            }
        });

        jtxtCash.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addGap(0, 96, Short.MAX_VALUE)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                                .addComponent(jtxtCash, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(100, 100, 100))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                                .addComponent(jbtnCompleteTransactionCash)
                                .addGap(145, 145, 145))))))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtxtCash, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtnCompleteTransactionCash, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Cash", jPanel9);

        jPanel10.setBackground(new java.awt.Color(225, 236, 242));

        jLabel16.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel16.setText("Card Number:");

        jbtnCompleteTransactionCredit.setBackground(new java.awt.Color(248, 226, 140));
        jbtnCompleteTransactionCredit.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jbtnCompleteTransactionCredit.setText("Process Transaction");
        jbtnCompleteTransactionCredit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCompleteTransactionCreditActionPerformed(evt);
            }
        });

        jtxtCredit.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                        .addGap(0, 94, Short.MAX_VALUE)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                                .addComponent(jtxtCredit, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(94, 94, 94))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                                .addComponent(jbtnCompleteTransactionCredit)
                                .addGap(149, 149, 149))))))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jtxtCredit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtnCompleteTransactionCredit, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        jTabbedPane2.addTab("Credit", jPanel10);

        jbtnCancelTransaction.setBackground(new java.awt.Color(248, 226, 140));
        jbtnCancelTransaction.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jbtnCancelTransaction.setText("Void Transaction");
        jbtnCancelTransaction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCancelTransactionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtnCancelTransaction)
                .addGap(38, 38, 38))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtnCancelTransaction)
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlSalesLayout = new javax.swing.GroupLayout(pnlSales);
        pnlSales.setLayout(pnlSalesLayout);
        pnlSalesLayout.setHorizontalGroup(
            pnlSalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSalesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlSalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlSalesLayout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlSalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        pnlSalesLayout.setVerticalGroup(
            pnlSalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSalesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlSalesLayout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlSalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlSalesLayout.createSequentialGroup()
                                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(pnlSalesLayout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPaneMain.addTab("Sales", pnlSales);

        pnlHoldProcessing.setBackground(new java.awt.Color(225, 236, 242));

        jPanel11.setBackground(new java.awt.Color(225, 236, 242));
        jPanel11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jLabel12.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel12.setText("Select the Customer: ");

        jtDisplayHoldCustomers.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        jtDisplayHoldCustomers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jtDisplayHoldCustomers.addMouseListener(new MouseAdapter() {
            public void mousePressed(MouseEvent me) {
                JTable table =(JTable) me.getSource();
                Point p = me.getPoint();
                int row = table.rowAtPoint(p);
                if (me.getClickCount() == 1) {
                    try {
                        String custID = jtDisplayHoldCustomers.getModel().getValueAt(row, 0).toString();

                        ResultSetTableModel tableModel;
                        try {
                            tableModel = new ResultSetTableModel(database.DB_LOCATION, database.DB_USER, database.DB_PASSWORD, "SELECT * FROM vw_Holds WHERE [Customer Number] = " + custID);
                            jtDisplayHolds.setModel(tableModel);
                        } catch (SQLException ex) {
                            JOptionPane.showMessageDialog(null, "Failed to populate table from the database. ");
                        }

                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(null, "Please search for a customer before clicking in this table. " + ex);
                    }
                }
            }
        });
        jScrollPane11.setViewportView(jtDisplayHoldCustomers);

        jLabel13.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel13.setText("Select Customer's Holds: ");

        jtDisplayHolds.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        jtDisplayHolds.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jtDisplayHolds.addMouseListener(new MouseAdapter() {
            public void mousePressed(MouseEvent me) {
                JTable table =(JTable) me.getSource();
                Point p = me.getPoint();
                int row = table.rowAtPoint(p);
                if (me.getClickCount() == 1) {
                    try {
                        holdID = Integer.parseInt(jtDisplayHolds.getModel().getValueAt(row, 0).toString());

                    } catch (NumberFormatException ex) {
                        JOptionPane.showMessageDialog(null, "Error retrieving hold information. ");
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(null, "Please search for a customer before clicking in this table. " + ex);
                    }
                }
            }
        });
        jScrollPane12.setViewportView(jtDisplayHolds);

        jbtnHoldAddToTransaction.setBackground(new java.awt.Color(248, 226, 140));
        jbtnHoldAddToTransaction.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jbtnHoldAddToTransaction.setText("Add to Current Transaction");
        jbtnHoldAddToTransaction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnHoldAddToTransactionActionPerformed(evt);
            }
        });

        jbtnHoldDelete.setBackground(new java.awt.Color(248, 226, 140));
        jbtnHoldDelete.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jbtnHoldDelete.setText("Delete Selected Hold");
        jbtnHoldDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnHoldDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane12)
                            .addComponent(jScrollPane11, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel11Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel12))
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addGap(167, 167, 167)
                                .addComponent(jbtnHoldAddToTransaction)
                                .addGap(99, 99, 99)
                                .addComponent(jbtnHoldDelete)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnHoldAddToTransaction)
                    .addComponent(jbtnHoldDelete))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        jPanel12.setBackground(new java.awt.Color(225, 236, 242));
        jPanel12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jbtnHoldClearSearch.setBackground(new java.awt.Color(248, 226, 140));
        jbtnHoldClearSearch.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jbtnHoldClearSearch.setText("Clear");
        jbtnHoldClearSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnHoldClearSearchActionPerformed(evt);
            }
        });

        jbtnHoldSearch.setBackground(new java.awt.Color(248, 226, 140));
        jbtnHoldSearch.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jbtnHoldSearch.setText("Search");
        jbtnHoldSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnHoldSearchActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel11.setText("Customer Phone:");

        jtxtHoldPhone.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel10.setText("Search Holds");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                        .addContainerGap(150, Short.MAX_VALUE)
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)))
                .addComponent(jtxtHoldPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(jbtnHoldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(jbtnHoldClearSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(98, 98, 98))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnHoldClearSearch)
                    .addComponent(jbtnHoldSearch)
                    .addComponent(jtxtHoldPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32))
        );

        javax.swing.GroupLayout pnlHoldProcessingLayout = new javax.swing.GroupLayout(pnlHoldProcessing);
        pnlHoldProcessing.setLayout(pnlHoldProcessingLayout);
        pnlHoldProcessingLayout.setHorizontalGroup(
            pnlHoldProcessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHoldProcessingLayout.createSequentialGroup()
                .addGap(232, 232, 232)
                .addGroup(pnlHoldProcessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(214, Short.MAX_VALUE))
        );
        pnlHoldProcessingLayout.setVerticalGroup(
            pnlHoldProcessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHoldProcessingLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(99, 99, 99))
        );

        jPaneMain.addTab("Hold Processing", pnlHoldProcessing);

        jtabInventory.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        pnlComics.setBackground(new java.awt.Color(225, 236, 242));

        jPanel16.setBackground(new java.awt.Color(225, 236, 242));
        jPanel16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jLabel15.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel15.setText("Comic ID:");

        jtxtInventoryComicID.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jtxtInventoryComicID.setEnabled(false);

        jLabel17.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel17.setText("Lookup ID:");

        jtxtInvComicLookupID.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jtxtInvComicLookupID.setEnabled(false);

        jLabel18.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel18.setText("Comic Title:");

        jtxtInventoryComicTitle.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jtxtInventoryComicTitle.setEnabled(false);

        jLabel19.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel19.setText("Author First Name:");

        jtxtInventoryAuthorName.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jtxtInventoryAuthorName.setEnabled(false);

        jLabel20.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel20.setText("Author Last Name:");

        jtxtInventoryLastName.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jtxtInventoryLastName.setEnabled(false);

        jLabel21.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel21.setText("Price:");

        jtxtInventoryPrice.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jtxtInventoryPrice.setEnabled(false);

        jLabel22.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel22.setText("Quantity:");

        jtxtInventoryQuantity.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jtxtInventoryQuantity.setEnabled(false);

        jLabel23.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel23.setText("Publisher Date:");

        jtxtInventoryPublisherDate.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jtxtInventoryPublisherDate.setEnabled(false);

        jLabel24.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel24.setText("Publisher:");

        jtxtInventoryPublisher.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jtxtInventoryPublisher.setEnabled(false);

        jLabel25.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel25.setText("Comic Information");

        btnInventorySave.setBackground(new java.awt.Color(248, 226, 140));
        btnInventorySave.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnInventorySave.setText("Save");
        btnInventorySave.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnInventorySave.setEnabled(false);
        btnInventorySave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInventorySaveActionPerformed(evt);
            }
        });

        btnInventoryCancel.setBackground(new java.awt.Color(248, 226, 140));
        btnInventoryCancel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnInventoryCancel.setText("Cancel");
        btnInventoryCancel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnInventoryCancel.setEnabled(false);
        btnInventoryCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInventoryCancelActionPerformed(evt);
            }
        });

        jbtnInventoryComicAdd.setBackground(new java.awt.Color(248, 226, 140));
        jbtnInventoryComicAdd.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jbtnInventoryComicAdd.setText("Add");
        jbtnInventoryComicAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbtnInventoryComicAdd.setEnabled(false);
        jbtnInventoryComicAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnInventoryComicAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(jLabel17)
                            .addComponent(jLabel18)
                            .addComponent(jLabel19)
                            .addComponent(jLabel21)
                            .addComponent(jLabel22)
                            .addComponent(jLabel23)
                            .addComponent(jLabel24)
                            .addComponent(jLabel20))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jtxtInventoryPublisher, javax.swing.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE)
                            .addComponent(jtxtInventoryPublisherDate, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtxtInventoryQuantity, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtxtInventoryPrice, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtxtInventoryLastName, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtxtInventoryAuthorName, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtxtInventoryComicTitle, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtxtInvComicLookupID, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtxtInventoryComicID, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGap(166, 166, 166)
                        .addComponent(jLabel25)
                        .addGap(0, 164, Short.MAX_VALUE))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnInventorySave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnInventoryCancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jbtnInventoryComicAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel25)
                .addGap(18, 18, 18)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jtxtInventoryComicID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addGap(18, 18, 18)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jtxtInvComicLookupID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jtxtInventoryComicTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jtxtInventoryAuthorName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jtxtInventoryLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(jtxtInventoryPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(jtxtInventoryQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(jtxtInventoryPublisherDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(jtxtInventoryPublisher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addComponent(btnInventorySave, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnInventoryCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jbtnInventoryComicAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel17.setBackground(new java.awt.Color(225, 236, 242));
        jPanel17.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jLabel26.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel26.setText("Enter in Lookup Code:");

        jtxtInventorySearchKey.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jbtnInventorySearchComic.setBackground(new java.awt.Color(248, 226, 140));
        jbtnInventorySearchComic.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jbtnInventorySearchComic.setText("Search");
        jbtnInventorySearchComic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnInventorySearchComicActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jtxtInventorySearchKey, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jbtnInventorySearchComic, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(74, Short.MAX_VALUE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(jtxtInventorySearchKey, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(jbtnInventorySearchComic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jPanel18.setBackground(new java.awt.Color(225, 236, 242));
        jPanel18.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jtDisplayComicsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jtDisplayComicsTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jtDisplayComicsTable.addMouseListener(new MouseAdapter(){
            public void mousePressed(MouseEvent me){
                JTable table = (JTable)me.getSource();
                Point p = me.getPoint();
                int row = table.rowAtPoint(p);
                if(me.getClickCount()==1)
                {
                    try
                    {
                        jtxtInventoryComicID.setText(jtDisplayComicsTable.getModel().getValueAt(row, 0).toString().trim());
                        jtxtInvComicLookupID.setText(jtDisplayComicsTable.getModel().getValueAt(row, 1).toString().trim());
                        jtxtInventoryComicTitle.setText(jtDisplayComicsTable.getModel().getValueAt(row, 2).toString().trim());
                        jtxtInventoryAuthorName.setText(jtDisplayComicsTable.getModel().getValueAt(row, 3).toString().trim());
                        jtxtInventoryLastName.setText(jtDisplayComicsTable.getModel().getValueAt(row, 4).toString().trim());
                        jtxtInventoryPrice.setText(jtDisplayComicsTable.getModel().getValueAt(row, 5).toString().trim());
                        jtxtInventoryQuantity.setText(jtDisplayComicsTable.getModel().getValueAt(row, 6).toString().trim());
                        jtxtInventoryPublisherDate.setText(jtDisplayComicsTable.getModel().getValueAt(row, 7).toString().trim());
                        jtxtInventoryPublisher.setText(jtDisplayComicsTable.getModel().getValueAt(row, 8).toString().trim());
                    }
                    catch (Exception ex)
                    {
                        JOptionPane.showMessageDialog(null, "Unable to populate fields.");
                    }
                }
            }
        });
        jScrollPane7.setViewportView(jtDisplayComicsTable);

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7)
                .addContainerGap())
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 473, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel19.setBackground(new java.awt.Color(225, 236, 242));
        jPanel19.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        btnInventoryComicDisplayAll.setBackground(new java.awt.Color(248, 226, 140));
        btnInventoryComicDisplayAll.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnInventoryComicDisplayAll.setText("Display All");
        btnInventoryComicDisplayAll.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnInventoryComicDisplayAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInventoryComicDisplayAllActionPerformed(evt);
            }
        });

        btnInventoryEdit.setBackground(new java.awt.Color(248, 226, 140));
        btnInventoryEdit.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnInventoryEdit.setText("Edit");
        btnInventoryEdit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnInventoryEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInventoryEditActionPerformed(evt);
            }
        });

        btnInventoryClear.setBackground(new java.awt.Color(248, 226, 140));
        btnInventoryClear.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnInventoryClear.setText("Clear");
        btnInventoryClear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnInventoryClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInventoryClearActionPerformed(evt);
            }
        });

        btnInventoryAdd.setBackground(new java.awt.Color(248, 226, 140));
        btnInventoryAdd.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnInventoryAdd.setText("Add Item");
        btnInventoryAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnInventoryAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInventoryAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(btnInventoryComicDisplayAll, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67)
                .addComponent(btnInventoryEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(btnInventoryClear, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnInventoryAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel19Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInventoryComicDisplayAll, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnInventoryEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnInventoryClear, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnInventoryAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlComicsLayout = new javax.swing.GroupLayout(pnlComics);
        pnlComics.setLayout(pnlComicsLayout);
        pnlComicsLayout.setHorizontalGroup(
            pnlComicsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlComicsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlComicsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlComicsLayout.setVerticalGroup(
            pnlComicsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlComicsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlComicsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlComicsLayout.createSequentialGroup()
                        .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jtabInventory.addTab("Comics", pnlComics);

        pnlMisc.setBackground(new java.awt.Color(225, 236, 242));

        jPanel20.setBackground(new java.awt.Color(225, 236, 242));
        jPanel20.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel20.setAutoscrolls(true);

        jLabel27.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel27.setText("Inventory Misc ID:");

        jLabel28.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel28.setText("Miscelaneous Item Information");

        jtxtInventoryMiscInvID.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jtxtInventoryMiscInvID.setEnabled(false);

        jLabel29.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel29.setText("Lookup Code:");

        jtxtInvMiscLookupID.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jtxtInvMiscLookupID.setEnabled(false);

        jLabel31.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel31.setText("Product Name:");

        jtxtInventoryMiscProductName.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jtxtInventoryMiscProductName.setEnabled(false);

        jLabel32.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel32.setText("Product Price:");

        jtxtInventoryMiscProductPrice.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jtxtInventoryMiscProductPrice.setEnabled(false);

        jLabel33.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel33.setText("Product Quantity:");

        jtxtInventoryMiscProductQuantity.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jtxtInventoryMiscProductQuantity.setEnabled(false);

        btnInventoryMiscSave.setBackground(new java.awt.Color(248, 226, 140));
        btnInventoryMiscSave.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnInventoryMiscSave.setText("Save");
        btnInventoryMiscSave.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnInventoryMiscSave.setEnabled(false);
        btnInventoryMiscSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInventoryMiscSaveActionPerformed(evt);
            }
        });

        btnInventoryMiscCancel.setBackground(new java.awt.Color(248, 226, 140));
        btnInventoryMiscCancel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnInventoryMiscCancel.setText("Cancel");
        btnInventoryMiscCancel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnInventoryMiscCancel.setEnabled(false);
        btnInventoryMiscCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInventoryMiscCancelActionPerformed(evt);
            }
        });

        jbtnInventoryMiscAdd.setBackground(new java.awt.Color(248, 226, 140));
        jbtnInventoryMiscAdd.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jbtnInventoryMiscAdd.setText("Add");
        jbtnInventoryMiscAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbtnInventoryMiscAdd.setEnabled(false);
        jbtnInventoryMiscAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnInventoryMiscAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel27)
                            .addComponent(jLabel29)
                            .addComponent(jLabel31)
                            .addComponent(jLabel32)
                            .addComponent(jLabel33))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jtxtInventoryMiscProductPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE)
                            .addComponent(jtxtInventoryMiscProductName)
                            .addComponent(jtxtInvMiscLookupID, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtxtInventoryMiscInvID, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtxtInventoryMiscProductQuantity, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jLabel28))
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnInventoryMiscSave, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnInventoryMiscCancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbtnInventoryMiscAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel28)
                .addGap(49, 49, 49)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(jtxtInventoryMiscInvID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(jtxtInvMiscLookupID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(jtxtInventoryMiscProductName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32)
                    .addComponent(jtxtInventoryMiscProductPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(jtxtInventoryMiscProductQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnInventoryMiscSave, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(btnInventoryMiscCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jbtnInventoryMiscAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(128, 128, 128))
        );

        jPanel13.setBackground(new java.awt.Color(225, 236, 242));
        jPanel13.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel13.setAutoscrolls(true);

        jLabel34.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel34.setText("Enter in keyword:");

        jtxtInventoryMiscSearchKey.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jbtnInventorySearchMisc.setBackground(new java.awt.Color(248, 226, 140));
        jbtnInventorySearchMisc.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jbtnInventorySearchMisc.setText("Search");
        jbtnInventorySearchMisc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnInventorySearchMiscActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel34)
                .addGap(18, 18, 18)
                .addComponent(jtxtInventoryMiscSearchKey, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jbtnInventorySearchMisc, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(jtxtInventoryMiscSearchKey)
                    .addComponent(jbtnInventorySearchMisc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(29, 29, 29))
        );

        jPanel14.setBackground(new java.awt.Color(225, 236, 242));
        jPanel14.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel14.setAutoscrolls(true);

        jtDisplayMiscTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jtDisplayMiscTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jtDisplayMiscTable.addMouseListener(new MouseAdapter(){
            public void mousePressed(MouseEvent me){
                JTable table = (JTable)me.getSource();
                Point p = me.getPoint();
                int row = table.rowAtPoint(p);
                if(me.getClickCount()==1)
                {
                    try
                    {
                        jtxtInventoryMiscInvID.setText(jtDisplayMiscTable.getModel().getValueAt(row, 0).toString().trim());
                        jtxtInvMiscLookupID.setText(jtDisplayMiscTable.getModel().getValueAt(row, 1).toString().trim());
                        jtxtInventoryMiscProductName.setText(jtDisplayMiscTable.getModel().getValueAt(row, 2).toString().trim());
                        jtxtInventoryMiscProductPrice.setText(jtDisplayMiscTable.getModel().getValueAt(row, 3).toString().trim());
                        jtxtInventoryMiscProductQuantity.setText(jtDisplayMiscTable.getModel().getValueAt(row, 4).toString().trim());

                    }
                    catch (Exception ex)
                    {
                        JOptionPane.showMessageDialog(null, "Unable to populate fields.");
                    }
                }
            }
        });
        jScrollPane8.setViewportView(jtDisplayMiscTable);

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8)
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 476, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel21.setBackground(new java.awt.Color(225, 236, 242));
        jPanel21.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel21.setAutoscrolls(true);

        btnInventoryMiscDisplayAll.setBackground(new java.awt.Color(248, 226, 140));
        btnInventoryMiscDisplayAll.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnInventoryMiscDisplayAll.setText("Display All");
        btnInventoryMiscDisplayAll.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnInventoryMiscDisplayAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInventoryMiscDisplayAllActionPerformed(evt);
            }
        });

        btnInventoryMiscEdit.setBackground(new java.awt.Color(248, 226, 140));
        btnInventoryMiscEdit.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnInventoryMiscEdit.setText("Edit");
        btnInventoryMiscEdit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnInventoryMiscEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInventoryMiscEditActionPerformed(evt);
            }
        });

        btnInventoryMiscClear.setBackground(new java.awt.Color(248, 226, 140));
        btnInventoryMiscClear.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnInventoryMiscClear.setText("Clear");
        btnInventoryMiscClear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnInventoryMiscClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInventoryMiscClearActionPerformed(evt);
            }
        });

        btnInventoryMiscAdd.setBackground(new java.awt.Color(248, 226, 140));
        btnInventoryMiscAdd.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnInventoryMiscAdd.setText("Add Item");
        btnInventoryMiscAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnInventoryMiscAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInventoryMiscAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(btnInventoryMiscDisplayAll, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(92, 92, 92)
                .addComponent(btnInventoryMiscEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(99, 99, 99)
                .addComponent(btnInventoryMiscClear, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(btnInventoryMiscAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(70, Short.MAX_VALUE))
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel21Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInventoryMiscDisplayAll, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnInventoryMiscEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnInventoryMiscClear, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnInventoryMiscAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout pnlMiscLayout = new javax.swing.GroupLayout(pnlMisc);
        pnlMisc.setLayout(pnlMiscLayout);
        pnlMiscLayout.setHorizontalGroup(
            pnlMiscLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMiscLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlMiscLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlMiscLayout.setVerticalGroup(
            pnlMiscLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMiscLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMiscLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlMiscLayout.createSequentialGroup()
                        .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jtabInventory.addTab("Misc.", pnlMisc);

        jPaneMain.addTab("Inventory", jtabInventory);

        pnlCustomer.setBackground(new java.awt.Color(225, 236, 242));

        jPanel24.setBackground(new java.awt.Color(225, 236, 242));
        jPanel24.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jbtnViewAllCustomers.setBackground(new java.awt.Color(248, 226, 140));
        jbtnViewAllCustomers.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jbtnViewAllCustomers.setText("View All Customers");
        jbtnViewAllCustomers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnViewAllCustomersActionPerformed(evt);
            }
        });

        jtDisplayCustomers.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        jtDisplayCustomers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "First Name", "Last Name", "Phone", "Email"
            }
        ));
        jScrollPane2.setViewportView(jtDisplayCustomers);

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addGap(201, 201, 201)
                .addComponent(jbtnViewAllCustomers, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(234, Short.MAX_VALUE))
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jbtnViewAllCustomers)
                .addGap(33, 33, 33)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 623, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel25.setBackground(new java.awt.Color(225, 236, 242));
        jPanel25.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jLabel36.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel36.setText("First Name:");

        jLabel35.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel35.setText("Last Name:");

        jLabel37.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel37.setText("Phone No.");

        jLabel38.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel38.setText("Email:");

        jbtnAddCustomer.setBackground(new java.awt.Color(248, 226, 140));
        jbtnAddCustomer.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jbtnAddCustomer.setText("Add Customer");
        jbtnAddCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnAddCustomerActionPerformed(evt);
            }
        });

        jbtnSearchCustomer.setBackground(new java.awt.Color(248, 226, 140));
        jbtnSearchCustomer.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jbtnSearchCustomer.setText("Search Customer");
        jbtnSearchCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSearchCustomerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel35)
                    .addComponent(jLabel36)
                    .addComponent(jLabel37)
                    .addComponent(jLabel38))
                .addGap(18, 18, 18)
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtxtCustomerEmail)
                    .addComponent(jtxtCustomerPhone)
                    .addComponent(jtxtCustomerLastName)
                    .addComponent(jtxtCustomerFirstName, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE))
                .addGap(19, 19, 19))
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbtnAddCustomer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbtnSearchCustomer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel36)
                    .addComponent(jtxtCustomerFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel35)
                    .addComponent(jtxtCustomerLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel25Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel37, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel25Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jtxtCustomerPhone)))
                .addGap(18, 18, 18)
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtCustomerEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addComponent(jbtnAddCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jbtnSearchCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlCustomerLayout = new javax.swing.GroupLayout(pnlCustomer);
        pnlCustomer.setLayout(pnlCustomerLayout);
        pnlCustomerLayout.setHorizontalGroup(
            pnlCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCustomerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlCustomerLayout.setVerticalGroup(
            pnlCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCustomerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPaneMain.addTab("Customer Management", pnlCustomer);

        pnlEmployee.setBackground(new java.awt.Color(225, 236, 242));

        jPanel15.setBackground(new java.awt.Color(225, 236, 242));
        jPanel15.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jPanel23.setBackground(new java.awt.Color(225, 236, 242));
        jPanel23.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jbtnSearchEmployeeByStatus.setBackground(new java.awt.Color(248, 226, 140));
        jbtnSearchEmployeeByStatus.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jbtnSearchEmployeeByStatus.setText("Search By Status");
        jbtnSearchEmployeeByStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSearchEmployeeByStatusActionPerformed(evt);
            }
        });

        jbtnSearchEmployeeByType.setBackground(new java.awt.Color(248, 226, 140));
        jbtnSearchEmployeeByType.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jbtnSearchEmployeeByType.setText("Search By Type");
        jbtnSearchEmployeeByType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSearchEmployeeByTypeActionPerformed(evt);
            }
        });

        jbtnSearchEmployee.setBackground(new java.awt.Color(248, 226, 140));
        jbtnSearchEmployee.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jbtnSearchEmployee.setText("Search Employees");
        jbtnSearchEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSearchEmployeeActionPerformed(evt);
            }
        });

        jbtnUpdateEmployee.setBackground(new java.awt.Color(248, 226, 140));
        jbtnUpdateEmployee.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jbtnUpdateEmployee.setText("Update Employee");
        jbtnUpdateEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnUpdateEmployeeActionPerformed(evt);
            }
        });

        jLabel39.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel39.setText("Employee Information");

        jLabel40.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel40.setText("First Name:");

        jLabel41.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel41.setText("Last Name:");

        jLabel42.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel42.setText("Address:");

        jLabel43.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel43.setText("City:");

        jLabel44.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel44.setText("State:");

        jLabel45.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel45.setText("ZIP:");

        jLabel46.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel46.setText("Phone No.");

        jLabel48.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel48.setText("Employee Type:");

        jLabel49.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel49.setText("Status:");

        jcboxEmployeeTypeU.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Retail Associate", "Manager" }));

        jcboxEmployeeStatusU.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Active", "Inactive" }));

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addContainerGap(62, Short.MAX_VALUE)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel23Layout.createSequentialGroup()
                        .addComponent(jLabel39)
                        .addGap(418, 418, 418))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel23Layout.createSequentialGroup()
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel23Layout.createSequentialGroup()
                                .addComponent(jbtnUpdateEmployee)
                                .addGap(47, 47, 47)
                                .addComponent(jbtnSearchEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel23Layout.createSequentialGroup()
                                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel40)
                                    .addComponent(jLabel44)
                                    .addComponent(jLabel42)
                                    .addComponent(jLabel46)
                                    .addComponent(jLabel49))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jtxtEmployeeFirstNameU, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jtxtEmployeeAddressU, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jtxtEmployeeStateU, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jtxtEmployeePhoneU, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jcboxEmployeeStatusU, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(51, 51, 51)))
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel23Layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel23Layout.createSequentialGroup()
                                        .addComponent(jLabel41)
                                        .addGap(55, 55, 55)
                                        .addComponent(jtxtEmployeeLastNameU, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel23Layout.createSequentialGroup()
                                        .addComponent(jLabel48)
                                        .addGap(24, 24, 24)
                                        .addComponent(jcboxEmployeeTypeU, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel23Layout.createSequentialGroup()
                                        .addComponent(jLabel45)
                                        .addGap(102, 102, 102)
                                        .addComponent(jtxtEmployeeZIPU, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel23Layout.createSequentialGroup()
                                        .addComponent(jLabel43)
                                        .addGap(98, 98, 98)
                                        .addComponent(jtxtEmployeeCityU, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel23Layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addComponent(jbtnSearchEmployeeByType)
                                .addGap(48, 48, 48)
                                .addComponent(jbtnSearchEmployeeByStatus)))
                        .addContainerGap(63, Short.MAX_VALUE))))
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel23Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel39)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel40)
                    .addGroup(jPanel23Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel41)
                            .addComponent(jtxtEmployeeLastNameU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel23Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel43)
                                .addComponent(jtxtEmployeeCityU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel42))
                        .addGap(39, 39, 39)
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel44)
                            .addComponent(jLabel45)
                            .addComponent(jtxtEmployeeZIPU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel46)
                            .addComponent(jLabel48)
                            .addComponent(jcboxEmployeeTypeU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addComponent(jLabel49))
                    .addComponent(jtxtEmployeeFirstNameU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel23Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jtxtEmployeeAddressU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(jtxtEmployeeStateU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(jtxtEmployeePhoneU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(jcboxEmployeeStatusU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnUpdateEmployee)
                    .addComponent(jbtnSearchEmployee)
                    .addComponent(jbtnSearchEmployeeByType)
                    .addComponent(jbtnSearchEmployeeByStatus))
                .addGap(44, 44, 44))
        );

        jtDisplayEmployeesU.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee ID", "First Name", "Last Name", "Phone Number", "Address", "City", "State", "Zip", "Employee Type", "Status"
            }
        ));
        jtDisplayEmployeesU.addMouseListener(new MouseAdapter() {
            public void mousePressed(MouseEvent me) {
                JTable table =(JTable) me.getSource();
                Point p = me.getPoint();
                int row = table.rowAtPoint(p);
                if (me.getClickCount() == 1) {
                    try {
                        jtxtEmployeeFirstNameU.setText(jtDisplayEmployeesU.getModel().getValueAt(row, 1).toString());
                        jtxtEmployeeLastNameU.setText(jtDisplayEmployeesU.getModel().getValueAt(row, 2).toString());
                        jtxtEmployeeAddressU.setText(jtDisplayEmployeesU.getModel().getValueAt(row, 4).toString());
                        jtxtEmployeeCityU.setText(jtDisplayEmployeesU.getModel().getValueAt(row, 5).toString());
                        jtxtEmployeeStateU.setText(jtDisplayEmployeesU.getModel().getValueAt(row, 6).toString());
                        jtxtEmployeeZIPU.setText(jtDisplayEmployeesU.getModel().getValueAt(row, 7).toString());
                        jtxtEmployeePhoneU.setText(jtDisplayEmployeesU.getModel().getValueAt(row, 3).toString());

                        if (jtDisplayEmployeesU.getModel().getValueAt(row, 8).toString().matches("RA")){
                            jcboxEmployeeTypeU.setSelectedIndex(0);
                        }else if (jtDisplayEmployeesU.getModel().getValueAt(row, 8).toString().matches("MG")){
                            jcboxEmployeeTypeU.setSelectedIndex(1);
                        }

                        if (jtDisplayEmployeesU.getModel().getValueAt(row, 9).toString().matches("AC")) {
                            jcboxEmployeeStatusU.setSelectedIndex(0);
                        } else if (jtDisplayEmployeesU.getModel().getValueAt(row, 9).toString().matches("IN")) {
                            jcboxEmployeeStatusU.setSelectedIndex(1);
                        }

                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(null, "Please search for an employee or view all employees before attemtping to make a selection from this table. ");
                    }
                }
            }
        });
        jScrollPane5.setViewportView(jtDisplayEmployeesU);

        jbtnSearchAllEmployees.setBackground(new java.awt.Color(248, 226, 140));
        jbtnSearchAllEmployees.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jbtnSearchAllEmployees.setText("View All Employees");
        jbtnSearchAllEmployees.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSearchAllEmployeesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane5))
                .addContainerGap())
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(411, 411, 411)
                .addComponent(jbtnSearchAllEmployees, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(jbtnSearchAllEmployees)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel22.setBackground(new java.awt.Color(225, 236, 242));
        jPanel22.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jLabel53.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel53.setText("Add Employee");

        jLabel54.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel54.setText("First Name:");

        jLabel55.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel55.setText("Last Name:");

        jLabel56.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel56.setText("Address:");

        jLabel57.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel57.setText("City:");

        jLabel58.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel58.setText("State:");

        jLabel59.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel59.setText("ZIP:");

        jLabel60.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel60.setText("Phone No.:");

        jLabel61.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel61.setText("Employee Type:");

        jcboxEmployeeType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Retail Associate", "Manager" }));

        jbtnGenerateUsername.setBackground(new java.awt.Color(248, 226, 140));
        jbtnGenerateUsername.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jbtnGenerateUsername.setText("Generate Username");
        jbtnGenerateUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnGenerateUsernameActionPerformed(evt);
            }
        });

        jLabel62.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel62.setText("Username:");

        jLabel63.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel63.setText("Password:");

        jbtnAddEmployee.setBackground(new java.awt.Color(248, 226, 140));
        jbtnAddEmployee.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jbtnAddEmployee.setText("Add Employee");
        jbtnAddEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnAddEmployeeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addComponent(jLabel54)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jtxtEmployeeFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addComponent(jLabel55)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jtxtEmployeeLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addComponent(jLabel56)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jtxtEmployeeAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addComponent(jLabel57)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jtxtEmployeeCity, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addComponent(jLabel58)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jtxtEmployeeState, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addComponent(jLabel59)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jtxtEmployeeZIP, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addComponent(jLabel60)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jtxtEmployeePhone, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addComponent(jLabel53)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addComponent(jLabel61)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addComponent(jcboxEmployeeType, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel62)
                            .addComponent(jLabel63))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel22Layout.createSequentialGroup()
                                .addComponent(jbtnGenerateUsername)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jtxtEmployeeUsername)
                            .addComponent(jpwEmployeePass))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel22Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtnAddEmployee)
                .addGap(84, 84, 84))
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jcboxEmployeeType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addComponent(jLabel53)
                        .addGap(41, 41, 41)
                        .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel22Layout.createSequentialGroup()
                                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel22Layout.createSequentialGroup()
                                        .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanel22Layout.createSequentialGroup()
                                                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(jPanel22Layout.createSequentialGroup()
                                                        .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                            .addGroup(jPanel22Layout.createSequentialGroup()
                                                                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                    .addGroup(jPanel22Layout.createSequentialGroup()
                                                                        .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                            .addComponent(jLabel54)
                                                                            .addComponent(jtxtEmployeeFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                        .addGap(18, 18, 18)
                                                                        .addComponent(jLabel55))
                                                                    .addComponent(jtxtEmployeeLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addGap(18, 18, 18)
                                                                .addComponent(jLabel56))
                                                            .addComponent(jtxtEmployeeAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGap(18, 18, 18)
                                                        .addComponent(jLabel57))
                                                    .addComponent(jtxtEmployeeCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel58))
                                            .addComponent(jtxtEmployeeState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel59))
                                    .addComponent(jtxtEmployeeZIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel60))
                            .addComponent(jtxtEmployeePhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel61)))
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(jLabel62)
                        .addGap(21, 21, 21))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel22Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jbtnGenerateUsername)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jtxtEmployeeUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel63)
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jpwEmployeePass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jbtnAddEmployee)
                .addContainerGap(201, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlEmployeeLayout = new javax.swing.GroupLayout(pnlEmployee);
        pnlEmployee.setLayout(pnlEmployeeLayout);
        pnlEmployeeLayout.setHorizontalGroup(
            pnlEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEmployeeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlEmployeeLayout.setVerticalGroup(
            pnlEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEmployeeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPaneMain.addTab("Employee Management", pnlEmployee);

        pnlReports.setBackground(new java.awt.Color(225, 236, 242));

        jPanel26.setBackground(new java.awt.Color(225, 236, 242));
        jPanel26.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jLabel64.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel64.setText("Select Report");

        jcbReportSelection.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Total Sales", "Sales By Month", "Current Monthly Sales By Employee", "Amount Sold by Item" }));
        jcbReportSelection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbReportSelectionActionPerformed(evt);
            }
        });

        jbtnReportGenerate.setBackground(new java.awt.Color(248, 226, 140));
        jbtnReportGenerate.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jbtnReportGenerate.setText("Generate Report");
        jbtnReportGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnReportGenerateActionPerformed(evt);
            }
        });

        jlblFilter.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jlblFilter.setText("Filter Criteria:");
        jlblFilter.setEnabled(false);

        jtfFilter.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jtfFilter.setEnabled(false);

        jtDisplayReports.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        jtDisplayReports.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane13.setViewportView(jtDisplayReports);

        javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel26Layout.createSequentialGroup()
                        .addComponent(jcbReportSelection, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(122, 122, 122)
                        .addComponent(jbtnReportGenerate)
                        .addGap(63, 63, 63)
                        .addComponent(jlblFilter)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtfFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel64))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane13, javax.swing.GroupLayout.DEFAULT_SIZE, 1383, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel64)
                .addGap(18, 18, 18)
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbReportSelection, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnReportGenerate)
                    .addComponent(jlblFilter)
                    .addComponent(jtfFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane13, javax.swing.GroupLayout.DEFAULT_SIZE, 593, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlReportsLayout = new javax.swing.GroupLayout(pnlReports);
        pnlReports.setLayout(pnlReportsLayout);
        pnlReportsLayout.setHorizontalGroup(
            pnlReportsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlReportsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlReportsLayout.setVerticalGroup(
            pnlReportsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlReportsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPaneMain.addTab("Reports", pnlReports);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPaneMain, javax.swing.GroupLayout.PREFERRED_SIZE, 1440, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPaneMain, javax.swing.GroupLayout.PREFERRED_SIZE, 811, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jDesktopPane2.setLayer(jPanel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane2Layout = new javax.swing.GroupLayout(jDesktopPane2);
        jDesktopPane2.setLayout(jDesktopPane2Layout);
        jDesktopPane2Layout.setHorizontalGroup(
            jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jDesktopPane2Layout.setVerticalGroup(
            jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenu1.setText("Logout");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenu1MousePressed(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jDesktopPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane2)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public int empID = 0;

    Database database = new Database();
    public static List<TransactionItem> transactionItems = new ArrayList<>();
    public final double TAX_RATE = 0.0675;
    public int holdID = 0;

    /**
     * LOGIN
     */
    //Logging out of Inventory/POS
    private void jMenu1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MousePressed

        if (JOptionPane.showConfirmDialog(null, "Are you sure you want to logout?", "WARNING",
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            //yes

            this.dispose();

            Login loginForm = new Login();
            loginForm.setVisible(true);

        } else {
            //no
        }
    }//GEN-LAST:event_jMenu1MousePressed

    private void btnInventoryMiscAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInventoryMiscAddActionPerformed
        // TODO add your handling code here:
        jtxtInventoryMiscInvID.setText("");
        jtxtInvMiscLookupID.setText("");
        jtxtInventoryMiscProductName.setText("");
        jtxtInventoryMiscProductPrice.setText("");
        jtxtInventoryMiscProductQuantity.setText("");

        //jtxtInventoryMiscInvID.setEnabled(true);
        jtxtInvMiscLookupID.setEnabled(true);
        jtxtInventoryMiscProductName.setEnabled(true);
        jtxtInventoryMiscProductPrice.setEnabled(true);
        jtxtInventoryMiscProductQuantity.setEnabled(true);

        jbtnInventoryMiscAdd.setEnabled(true);
        btnInventoryMiscCancel.setEnabled(true);
        //disabling the buttons that are not needed
        btnInventoryMiscDisplayAll.setEnabled(false);
        btnInventoryMiscEdit.setEnabled(false);
        btnInventoryMiscAdd.setEnabled(false);
        btnInventoryMiscClear.setEnabled(false);
        jtxtInventoryMiscSearchKey.setEnabled(false);
        jbtnInventorySearchMisc.setEnabled(false);
    }//GEN-LAST:event_btnInventoryMiscAddActionPerformed

    private void btnInventoryMiscClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInventoryMiscClearActionPerformed
        // Clearing the table
        jtDisplayMiscTable.setModel(new DefaultTableModel());
        //clearing the textboxes
        jtxtInventoryMiscInvID.setText("");
        jtxtInvMiscLookupID.setText("");
        jtxtInventoryMiscProductName.setText("");
        jtxtInventoryMiscProductPrice.setText("");
        jtxtInventoryMiscProductQuantity.setText("");
        jtxtInventoryMiscSearchKey.setText("");
    }//GEN-LAST:event_btnInventoryMiscClearActionPerformed

    private void btnInventoryMiscEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInventoryMiscEditActionPerformed

        String ID = "";

        try {
            ID = jtDisplayMiscTable.getModel().getValueAt(jtDisplayMiscTable.getSelectedRow(), 0).toString();

            if (!ID.equals("")) {
                //enable the textboxes for the user to enter data
                jtxtInventoryMiscProductPrice.setEnabled(true);
                jtxtInventoryMiscProductQuantity.setEnabled(true);
                btnInventoryMiscSave.setEnabled(true);
                btnInventoryMiscCancel.setEnabled(true);
                //disabling the buttons that are not needed
                btnInventoryMiscDisplayAll.setEnabled(false);
                btnInventoryMiscEdit.setEnabled(false);
                btnInventoryMiscAdd.setEnabled(false);
                btnInventoryMiscClear.setEnabled(false);
                jtxtInventoryMiscSearchKey.setEnabled(false);
                jbtnInventorySearchMisc.setEnabled(false);
            } else {
                JOptionPane.showMessageDialog(null, "Please select record to edit.");
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Please select the misc item you wish to update before trying to make changes. ");
        }
    }//GEN-LAST:event_btnInventoryMiscEditActionPerformed

    private void btnInventoryMiscDisplayAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInventoryMiscDisplayAllActionPerformed
        // TODO add your handling code here:
        try {
            ResultSetTableModel tableModel = new ResultSetTableModel(database.DB_LOCATION, database.DB_USER, database.DB_PASSWORD, "SELECT * FROM vw_MiscItems");
            jtDisplayMiscTable.setModel(tableModel);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Failed to populate table from the database. ");
        }
    }//GEN-LAST:event_btnInventoryMiscDisplayAllActionPerformed

    private void jbtnInventorySearchMiscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnInventorySearchMiscActionPerformed
        // TODO add your handling code here:
        try {
            ResultSetTableModel tableModel;

            if (!jtxtInventoryMiscSearchKey.getText().equals("")) {
                tableModel = new ResultSetTableModel(database.DB_LOCATION, database.DB_USER, database.DB_PASSWORD, "SELECT * FROM vw_MiscItems WHERE [Lookup Code] LIKE '%" + jtxtInventoryMiscSearchKey.getText() + "%'");
                jtDisplayMiscTable.setModel(tableModel);
            } else {
                JOptionPane.showMessageDialog(null, "Did not find anything that mathes the Lookup Code.");
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Could not connect to database.");
        }
    }//GEN-LAST:event_jbtnInventorySearchMiscActionPerformed

    private void jbtnInventoryMiscAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnInventoryMiscAddActionPerformed
        // TODO add your handling code here:

        //error handling
        int mLookupID;
        String mProductName;
        double mProductPrice;
        int mProductQuantity;

        if (jtxtInventoryMiscInvID.getText().equals("")) {
            try {
                if (!jtxtInvMiscLookupID.getText().equals("")) {
                    try {
                        mLookupID = Integer.parseInt(jtxtInvMiscLookupID.getText());
                        //Lookup code must be 8 or less
                        if (mLookupID <= 99999999) {
                            if (!jtxtInventoryMiscProductName.getText().equals("")) {
                                //product name must be less than or equal to 30
                                if (jtxtInventoryMiscProductName.getText().length() <= 30) {
                                    mProductName = jtxtInventoryMiscProductName.getText();

                                    if (!jtxtInventoryMiscProductPrice.getText().equals("")) {
                                        //try catch to see if price is entered in correctly
                                        try {
                                            mProductPrice = Double.parseDouble(jtxtInventoryMiscProductPrice.getText());
                                            //checking to make sure price is not below zero
                                            if (mProductPrice > 0) {
                                                //continue
                                                if (!jtxtInventoryMiscProductQuantity.getText().equals("")) {
                                                    try {
                                                        mProductQuantity = Integer.parseInt(jtxtInventoryMiscProductQuantity.getText());
                                                        //making sure its not less than 0
                                                        if (mProductQuantity > 0) {

                                                            //adding the Misc Item
                                                            database.InsertMiscInventory(mLookupID, mProductName, mProductPrice, mProductQuantity);

                                                            //locking the controls that are not needed
                                                            jbtnInventoryMiscAdd.setEnabled(false);
                                                            btnInventoryMiscCancel.setEnabled(false);
                                                            jtxtInvMiscLookupID.setEnabled(false);
                                                            jtxtInventoryMiscProductName.setEnabled(false);
                                                            jtxtInventoryMiscProductPrice.setEnabled(false);
                                                            jtxtInventoryMiscProductQuantity.setEnabled(false);
                                                            //unlocking controls to defaults
                                                            btnInventoryMiscDisplayAll.setEnabled(true);
                                                            btnInventoryMiscEdit.setEnabled(true);
                                                            btnInventoryMiscClear.setEnabled(true);
                                                            btnInventoryMiscAdd.setEnabled(true);
                                                            jtxtInventoryMiscSearchKey.setEnabled(true);
                                                            jbtnInventorySearchMisc.setEnabled(true);
                                                            //update the table by displaying all
                                                            try {
                                                                ResultSetTableModel tableModel = new ResultSetTableModel(database.DB_LOCATION, database.DB_USER, database.DB_PASSWORD, "SELECT * FROM vw_MiscItems");
                                                                jtDisplayMiscTable.setModel(tableModel);
                                                            } catch (SQLException ex) {
                                                                JOptionPane.showMessageDialog(null, "Failed to populate table from the database. ");
                                                            }

                                                            jtxtInvMiscLookupID.setText("");
                                                            jtxtInventoryMiscProductName.setText("");
                                                            jtxtInventoryMiscProductPrice.setText("");
                                                            jtxtInventoryMiscProductQuantity.setText("");

                                                        } else {
                                                            JOptionPane.showMessageDialog(null, "Quantity must be over 0. There cannot be a null value for this.");
                                                        }
                                                    } catch (NumberFormatException e) {
                                                        JOptionPane.showMessageDialog(null, "Please enter in a numeric number.");
                                                    }
                                                } else {
                                                    JOptionPane.showMessageDialog(null, "Enter in quantity.");
                                                }
                                            } else {
                                                JOptionPane.showMessageDialog(null, "Price must be over $0.00");
                                            }
                                        } catch (NumberFormatException nfe) {
                                            JOptionPane.showMessageDialog(null, "Please enter valid price.");
                                        }
                                    } else {
                                        JOptionPane.showMessageDialog(null, "Enter in Valid Price.");
                                    }

                                } else {
                                    JOptionPane.showMessageDialog(null, "Product name must be less than 25 characters.");
                                }

                            } else {
                                JOptionPane.showMessageDialog(null, "There is no Product name. Error.");
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "lookup code must be less than or equal to 8 characters");
                        }
                    } catch (NumberFormatException nfe) {
                        JOptionPane.showMessageDialog(null, "Must Be an integer with no more than 8 numbers.");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "There is no Lookup Code. Error.");
                }
            } catch (NumberFormatException nfe) {
                JOptionPane.showMessageDialog(null, "fail. Error." + nfe);
            }
        } else {
            JOptionPane.showMessageDialog(null, "There already is a product with that ID number. Error.");
        }
    }//GEN-LAST:event_jbtnInventoryMiscAddActionPerformed

    private void btnInventoryMiscCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInventoryMiscCancelActionPerformed

        if (btnInventoryMiscSave.isEnabled()) {
            //making the controls disabled so that nothing can be changed
            jtxtInventoryMiscProductPrice.setEnabled(false);
            jtxtInventoryMiscProductQuantity.setEnabled(false);
            btnInventoryMiscSave.setEnabled(false);
            btnInventoryMiscCancel.setEnabled(false);
            //making the default controls available again
            btnInventoryMiscDisplayAll.setEnabled(true);
            btnInventoryMiscEdit.setEnabled(true);
            btnInventoryMiscAdd.setEnabled(true);
            btnInventoryMiscClear.setEnabled(true);
            jtxtInventoryMiscSearchKey.setEnabled(true);
            jbtnInventorySearchMisc.setEnabled(true);
        } else {
            //making the controls disabled so that nothing can be changed
            jtxtInventoryMiscInvID.setEnabled(false);
            jtxtInvMiscLookupID.setEnabled(false);
            jtxtInventoryMiscProductName.setEnabled(false);
            jtxtInventoryMiscProductPrice.setEnabled(false);
            jtxtInventoryMiscProductQuantity.setEnabled(false);
            jbtnInventoryMiscAdd.setEnabled(false);
            btnInventoryMiscCancel.setEnabled(false);

            //making the default controls available again
            btnInventoryMiscDisplayAll.setEnabled(true);
            btnInventoryMiscEdit.setEnabled(true);
            btnInventoryMiscAdd.setEnabled(true);
            btnInventoryMiscClear.setEnabled(true);
            jtxtInventoryMiscSearchKey.setEnabled(true);
            jbtnInventorySearchMisc.setEnabled(true);
        }
    }//GEN-LAST:event_btnInventoryMiscCancelActionPerformed

    private void btnInventoryMiscSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInventoryMiscSaveActionPerformed

        //getting the users input
        int mInventoryID;
        int mLookupID;
        String mProductName;
        double mProductPrice;
        int mProductQuantity;

        if (!jtxtInventoryMiscInvID.getText().equals("")) {
            try {
                mInventoryID = Integer.parseInt(jtxtInventoryMiscInvID.getText());
                if (!jtxtInvMiscLookupID.getText().equals("")) {
                    mLookupID = Integer.parseInt(jtxtInvMiscLookupID.getText());
                    if (!jtxtInventoryMiscProductName.getText().equals("")) {
                        mProductName = jtxtInventoryMiscProductName.getText();
                        if (!jtxtInventoryMiscProductPrice.getText().equals("")) {
                            try {
                                mProductPrice = Double.parseDouble(jtxtInventoryMiscProductPrice.getText());
                                if (mProductPrice > 0) {
                                    try {
                                        if (!jtxtInventoryMiscProductQuantity.getText().equals("")) {
                                            mProductQuantity = Integer.parseInt(jtxtInventoryMiscProductQuantity.getText());
                                            if (mProductQuantity > 0) {

                                                try {
                                                    //saving the edit using method
                                                    database.UpdateMiscInventory(mInventoryID, mLookupID, mProductName, mProductPrice, mProductQuantity);
                                                } catch (Exception e) {
                                                    JOptionPane.showMessageDialog(null, "error" + e);
                                                }

                                                //locking the controls that are not needed
                                                btnInventoryMiscSave.setEnabled(false);
                                                btnInventoryMiscCancel.setEnabled(false);
                                                jtxtInventoryMiscProductPrice.setEnabled(false);
                                                jtxtInventoryMiscProductQuantity.setEnabled(false);
                                                //unlocking controls to defaults
                                                btnInventoryMiscDisplayAll.setEnabled(true);
                                                btnInventoryMiscEdit.setEnabled(true);
                                                btnInventoryMiscClear.setEnabled(true);
                                                btnInventoryMiscAdd.setEnabled(true);
                                                jtxtInventoryMiscSearchKey.setEnabled(true);
                                                jbtnInventorySearchMisc.setEnabled(true);
                                                //update the table by displaying all
                                                try {
                                                    ResultSetTableModel tableModel = new ResultSetTableModel(database.DB_LOCATION, database.DB_USER, database.DB_PASSWORD, "SELECT * FROM vw_MiscItems");
                                                    jtDisplayMiscTable.setModel(tableModel);
                                                } catch (SQLException ex) {
                                                    JOptionPane.showMessageDialog(null, "Failed to populate table from the database. ");
                                                }

                                            } else {
                                                JOptionPane.showMessageDialog(null, "Please enter quantity more than 0.");
                                            }
                                        } else {
                                            JOptionPane.showMessageDialog(null, "There is no first Name. Error.");
                                        }
                                    } catch (NumberFormatException nfe) {
                                        JOptionPane.showMessageDialog(null, "Must be an Integer.");
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(null, "Price must be more than 0.");
                                }
                            } catch (NumberFormatException nfe) {
                                JOptionPane.showMessageDialog(null, "Enter in valid Price.");
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "There is no Last Name. Error.");
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "There is no comic title. Error.");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "There is no Lookup Code. Error.");
                }
            } catch (NumberFormatException nfe) {
                JOptionPane.showMessageDialog(null, "fail. Error." + nfe);
            }
        } else {
            JOptionPane.showMessageDialog(null, "There is no Comic ID. Error 404.");
        }
    }//GEN-LAST:event_btnInventoryMiscSaveActionPerformed

    private void btnInventoryAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInventoryAddActionPerformed

        //clearing textboxes
        jtxtInventoryComicID.setText("");
        jtxtInventoryPrice.setText("");
        jtxtInventoryQuantity.setText("");
        jtxtInvComicLookupID.setText("");
        jtxtInventoryComicTitle.setText("");
        jtxtInventoryLastName.setText("");
        jtxtInventoryAuthorName.setText("");
        jtxtInventoryPublisherDate.setText("");
        jtxtInventoryPublisher.setText("");

        //enable the textboxes for the user to enter data
        jtxtInventoryPrice.setEnabled(true);
        jtxtInventoryQuantity.setEnabled(true);
        jtxtInvComicLookupID.setEnabled(true);
        jtxtInventoryComicTitle.setEnabled(true);
        jtxtInventoryLastName.setEnabled(true);
        jtxtInventoryAuthorName.setEnabled(true);
        jtxtInventoryPublisherDate.setEnabled(true);
        jtxtInventoryPublisher.setEnabled(true);

        jbtnInventoryComicAdd.setEnabled(true);
        btnInventoryCancel.setEnabled(true);
        //disabling the buttons that are not needed
        btnInventoryComicDisplayAll.setEnabled(false);
        btnInventoryEdit.setEnabled(false);
        btnInventoryAdd.setEnabled(false);
        btnInventoryClear.setEnabled(false);
        jtxtInventorySearchKey.setEnabled(false);
        jbtnInventorySearchComic.setEnabled(false);
    }//GEN-LAST:event_btnInventoryAddActionPerformed

    private void btnInventoryClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInventoryClearActionPerformed
        // Clearing the table
        jtDisplayComicsTable.setModel(new DefaultTableModel());
        //clearing the textboxes
        jtxtInvComicLookupID.setText("");
        jtxtInventoryComicTitle.setText("");
        jtxtInventoryLastName.setText("");
        jtxtInventoryAuthorName.setText("");
        jtxtInventoryPrice.setText("");
        jtxtInventoryQuantity.setText("");
        jtxtInventoryPublisherDate.setText("");
        jtxtInventoryPublisher.setText("");
        jtxtInventoryComicID.setText("");
        jtxtInventorySearchKey.setText("");
    }//GEN-LAST:event_btnInventoryClearActionPerformed

    private void btnInventoryEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInventoryEditActionPerformed
        // TODO add your handling code here:

        String ID = "";

        try {
            ID = jtDisplayComicsTable.getModel().getValueAt(jtDisplayComicsTable.getSelectedRow(), 0).toString();

            if (!ID.equals("")) {
                //enable the textboxes for the user to enter data
                jtxtInventoryPrice.setEnabled(true);
                jtxtInventoryQuantity.setEnabled(true);
                btnInventorySave.setEnabled(true);
                btnInventoryCancel.setEnabled(true);
                //disabling the buttons that are not needed
                btnInventoryComicDisplayAll.setEnabled(false);
                btnInventoryEdit.setEnabled(false);
                btnInventoryAdd.setEnabled(false);
                btnInventoryClear.setEnabled(false);
                jtxtInventorySearchKey.setEnabled(false);
                jbtnInventorySearchComic.setEnabled(false);
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Please select the comic you wish to update before trying to make changes. ");
        }
    }//GEN-LAST:event_btnInventoryEditActionPerformed

    private void btnInventoryComicDisplayAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInventoryComicDisplayAllActionPerformed
        // TODO add your handling code here:

        try {
            ResultSetTableModel tableModel = new ResultSetTableModel(database.DB_LOCATION, database.DB_USER, database.DB_PASSWORD, "SELECT * FROM vw_Comics");
            jtDisplayComicsTable.setModel(tableModel);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Failed to populate table from the database. ");
        }
    }//GEN-LAST:event_btnInventoryComicDisplayAllActionPerformed

    private void jbtnInventorySearchComicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnInventorySearchComicActionPerformed
        // TODO add your handling code here:
        try {
            ResultSetTableModel tableModel;

            if (!jtxtInventorySearchKey.getText().equals("")) {
                tableModel = new ResultSetTableModel(database.DB_LOCATION, database.DB_USER, database.DB_PASSWORD, "SELECT * FROM vw_Comics WHERE [Lookup Code] LIKE '%" + jtxtInventorySearchKey.getText() + "%'");
                jtDisplayComicsTable.setModel(tableModel);
            } else {
                JOptionPane.showMessageDialog(null, "Did not find anything that mathes the keyword.");
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Could not connect to database.");
        }
    }//GEN-LAST:event_jbtnInventorySearchComicActionPerformed

    private void jbtnInventoryComicAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnInventoryComicAddActionPerformed

        //error handling
        int cLookup;
        String cTitle;
        String cLName;
        String cFName;
        double cPrice;
        int cQuantity;
        String cPublisherDate;
        String cPublisher;
        int cComicID;

        if (jtxtInventoryComicID.getText().equals("")) {
            try {
                //cComicID = Integer.parseInt(jtxtInventoryComicID.getText());
                if (!jtxtInvComicLookupID.getText().equals("")) {
                    try {
                        cLookup = Integer.parseInt(jtxtInvComicLookupID.getText());
                        //Lookup code must be 8 or less
                        if (cLookup <= 99999999) {
                            if (!jtxtInventoryComicTitle.getText().equals("")) {
                                //Title must be less than or equal to 25
                                if (jtxtInventoryComicTitle.getText().length() <= 50) {
                                    cTitle = jtxtInventoryComicTitle.getText();
                                    if (!jtxtInventoryLastName.getText().equals("")) {
                                        //Last Name can only be 25 characters long
                                        if (jtxtInventoryLastName.getText().length() <= 25) {
                                            cLName = jtxtInventoryLastName.getText();
                                            if (!jtxtInventoryAuthorName.getText().equals("")) {
                                                //First Name can only be 25 characters long
                                                if (jtxtInventoryAuthorName.getText().length() <= 25) {
                                                    cFName = jtxtInventoryAuthorName.getText();
                                                    if (!jtxtInventoryPrice.getText().equals("")) {
                                                        //try catch to see if price is entered in correctly
                                                        try {
                                                            cPrice = Double.parseDouble(jtxtInventoryPrice.getText());
                                                            //checking to make sure price is not below zero
                                                            if (cPrice > 0) {
                                                                //continue
                                                                if (!jtxtInventoryQuantity.getText().equals("")) {
                                                                    try {
                                                                        cQuantity = Integer.parseInt(jtxtInventoryQuantity.getText());
                                                                        //making sure its not less than 0
                                                                        if (cQuantity > 0) {
                                                                            //continue
                                                                            if (!jtxtInventoryPublisherDate.getText().equals("")) {
                                                                                if (jtxtInventoryPublisherDate.getText().matches("\\d{4}-\\d{2}-\\d{2}")) {
                                                                                    cPublisherDate = jtxtInventoryPublisherDate.getText();
                                                                                    if (!jtxtInventoryPublisher.getText().equals("")) {
                                                                                        if (jtxtInventoryPublisher.getText().length() <= 25) {
                                                                                            cPublisher = jtxtInventoryPublisher.getText();

                                                                                            //adding the comic
                                                                                            database.InsertComicInventory(String.valueOf(cLookup), cTitle, cLName, cFName, cPrice, cQuantity, cPublisherDate, cPublisher);
                                                                                            //locking the controls that are not needed
                                                                                            jbtnInventoryComicAdd.setEnabled(false);
                                                                                            btnInventoryCancel.setEnabled(false);
                                                                                            jtxtInvComicLookupID.setEnabled(false);
                                                                                            jtxtInventoryComicTitle.setEnabled(false);
                                                                                            jtxtInventoryLastName.setEnabled(false);
                                                                                            jtxtInventoryAuthorName.setEnabled(false);
                                                                                            jtxtInventoryPrice.setEnabled(false);
                                                                                            jtxtInventoryQuantity.setEnabled(false);
                                                                                            jtxtInventoryPublisherDate.setEnabled(false);
                                                                                            jtxtInventoryPublisher.setEnabled(false);
                                                                                            //unlocking controls to defaults
                                                                                            btnInventoryComicDisplayAll.setEnabled(true);
                                                                                            btnInventoryEdit.setEnabled(true);
                                                                                            btnInventoryClear.setEnabled(true);
                                                                                            btnInventoryAdd.setEnabled(true);
                                                                                            jtxtInventorySearchKey.setEnabled(true);
                                                                                            jbtnInventorySearchComic.setEnabled(true);
                                                                                            //update the table by displaying all
                                                                                            try {
                                                                                                ResultSetTableModel tableModel = new ResultSetTableModel(database.DB_LOCATION, database.DB_USER, database.DB_PASSWORD, "SELECT * FROM vw_Comics");
                                                                                                jtDisplayComicsTable.setModel(tableModel);
                                                                                            } catch (SQLException ex) {
                                                                                                JOptionPane.showMessageDialog(null, "Failed to populate table from the database. ");
                                                                                            }

                                                                                        } else {
                                                                                            JOptionPane.showMessageDialog(null, "Publisher must be below 25 characters.");
                                                                                        }
                                                                                    } else {
                                                                                        JOptionPane.showMessageDialog(null, "Publisher name is missing. ERROR please contact admin");
                                                                                    }
                                                                                } else {
                                                                                    JOptionPane.showMessageDialog(null, "Please enter the date in the following format. YYYY-MM-DD");
                                                                                }
                                                                            } else {
                                                                                JOptionPane.showMessageDialog(null, "Publisher Date is missing. ERROR Contact Admin.");
                                                                            }
                                                                        } else {
                                                                            JOptionPane.showMessageDialog(null, "Quantity must be over 0. There cannot be a null value for this.");
                                                                        }
                                                                    } catch (NumberFormatException e) {
                                                                        JOptionPane.showMessageDialog(null, "Please enter in a numeric number.");
                                                                    }
                                                                } else {
                                                                    JOptionPane.showMessageDialog(null, "Enter in quantity.");
                                                                }
                                                            } else {
                                                                JOptionPane.showMessageDialog(null, "Price must be over $0.00");
                                                            }
                                                        } catch (NumberFormatException nfe) {
                                                            JOptionPane.showMessageDialog(null, "Please enter valid price.");
                                                        }
                                                    } else {
                                                        JOptionPane.showMessageDialog(null, "Enter in Valid Price.");
                                                    }
                                                } else {
                                                    JOptionPane.showMessageDialog(null, "Author Name can only be up to 25 Characters.");
                                                }
                                            } else {
                                                JOptionPane.showMessageDialog(null, "There is no first Name. Error.");
                                            }
                                        } else {
                                            JOptionPane.showMessageDialog(null, "The Last name can only contain 25 Characters.");
                                        }

                                    } else {
                                        JOptionPane.showMessageDialog(null, "There is no Last Name. Error.");
                                    }

                                } else {
                                    JOptionPane.showMessageDialog(null, "Title must be less than 25 characters.");
                                }

                            } else {
                                JOptionPane.showMessageDialog(null, "There is no comic title. Error.");
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "lookup code must be less than or equal to 8 characters");
                        }
                    } catch (NumberFormatException nfe) {
                        JOptionPane.showMessageDialog(null, "Must Be an integer with no more than 8 numbers.");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "There is no Lookup Code. Error.");
                }
            } catch (NumberFormatException nfe) {
                JOptionPane.showMessageDialog(null, "fail. Error." + nfe);
            }
        } else {
            JOptionPane.showMessageDialog(null, "There already is a comic ID with that number. Error.");
        }
    }//GEN-LAST:event_jbtnInventoryComicAddActionPerformed

    private void btnInventoryCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInventoryCancelActionPerformed
        // TODO add your handling code here:

        if (btnInventorySave.isEnabled()) {
            //making the controls disabled so that nothing can be changed
            jtxtInventoryPrice.setEnabled(false);
            jtxtInventoryQuantity.setEnabled(false);
            btnInventorySave.setEnabled(false);
            btnInventoryCancel.setEnabled(false);
            //making the default controls available again
            btnInventoryComicDisplayAll.setEnabled(true);
            btnInventoryEdit.setEnabled(true);
            btnInventoryAdd.setEnabled(true);
            btnInventoryClear.setEnabled(true);
            jtxtInventorySearchKey.setEnabled(true);
            jbtnInventorySearchComic.setEnabled(true);
        } else {
            //making the controls disabled so that nothing can be changed
            jtxtInvComicLookupID.setEnabled(false);
            jtxtInventoryComicTitle.setEnabled(false);
            jtxtInventoryLastName.setEnabled(false);
            jtxtInventoryAuthorName.setEnabled(false);
            jtxtInventoryPrice.setEnabled(false);
            jtxtInventoryQuantity.setEnabled(false);
            jtxtInventoryPublisherDate.setEnabled(false);
            jtxtInventoryPublisher.setEnabled(false);
            jbtnInventoryComicAdd.setEnabled(false);
            btnInventoryCancel.setEnabled(false);
            //making the default controls available again
            btnInventoryComicDisplayAll.setEnabled(true);
            btnInventoryEdit.setEnabled(true);
            btnInventoryAdd.setEnabled(true);
            btnInventoryClear.setEnabled(true);
            jtxtInventorySearchKey.setEnabled(true);
            jbtnInventorySearchComic.setEnabled(true);
        }
    }//GEN-LAST:event_btnInventoryCancelActionPerformed

    private void btnInventorySaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInventorySaveActionPerformed
        // TODO add your handling code here:
        //getting the users input
        int cLookup;
        String cTitle;
        String cLName;
        String cFName;
        double cPrice;
        int cQuantity;
        String cPublisherDate;
        String cPublisher;
        int cComicID;

        if (!jtxtInventoryComicID.getText().equals("")) {
            try {
                cComicID = Integer.parseInt(jtxtInventoryComicID.getText());
                if (!jtxtInvComicLookupID.getText().equals("")) {
                    cLookup = Integer.parseInt(jtxtInvComicLookupID.getText());
                    if (!jtxtInventoryComicTitle.getText().equals("")) {
                        cTitle = jtxtInventoryComicTitle.getText();
                        if (!jtxtInventoryLastName.getText().equals("")) {
                            cLName = jtxtInventoryLastName.getText();
                            if (!jtxtInventoryAuthorName.getText().equals("")) {
                                cFName = jtxtInventoryAuthorName.getText();
                                if (!jtxtInventoryPrice.getText().equals("")) {
                                    //try catch to see if price is entered in correctly
                                    try {
                                        cPrice = Double.parseDouble(jtxtInventoryPrice.getText());
                                        //checking to make sure price is not below zero
                                        if (cPrice > 0) {
                                            //continue
                                            if (!jtxtInventoryQuantity.getText().equals("")) {
                                                try {
                                                    cQuantity = Integer.parseInt(jtxtInventoryQuantity.getText());
                                                    //making sure its not less than 0
                                                    if (cQuantity > 0) {

                                                        //continue
                                                        if (!jtxtInventoryPublisherDate.getText().equals("")) {
                                                            cPublisherDate = jtxtInventoryPublisherDate.getText();
                                                            if (!jtxtInventoryPublisher.getText().equals("")) {
                                                                cPublisher = jtxtInventoryPublisherDate.getText();

                                                                try {
                                                                    //adding the comic using method
                                                                    database.UpdateComicInventory(cLookup, cTitle, cLName, cFName, cPrice, cQuantity, cPublisherDate, cPublisher, cComicID);
                                                                } catch (ParseException ex) {
                                                                    JOptionPane.showMessageDialog(null, "Error." + ex);
                                                                }

                                                                //locking the controls that are not needed
                                                                btnInventorySave.setEnabled(false);
                                                                btnInventoryCancel.setEnabled(false);
                                                                jtxtInventoryPrice.setEnabled(false);
                                                                jtxtInventoryQuantity.setEnabled(false);
                                                                //unlocking controls to defaults
                                                                btnInventoryComicDisplayAll.setEnabled(true);
                                                                btnInventoryEdit.setEnabled(true);
                                                                btnInventoryClear.setEnabled(true);
                                                                btnInventoryAdd.setEnabled(true);
                                                                jtxtInventorySearchKey.setEnabled(true);
                                                                jbtnInventorySearchComic.setEnabled(true);
                                                                //update the table by displaying all
                                                                try {
                                                                    ResultSetTableModel tableModel = new ResultSetTableModel(database.DB_LOCATION, database.DB_USER, database.DB_PASSWORD, "SELECT * FROM vw_Comics");
                                                                    jtDisplayComicsTable.setModel(tableModel);
                                                                } catch (SQLException ex) {
                                                                    JOptionPane.showMessageDialog(null, "Failed to populate table from the database. ");
                                                                }

                                                            } else {
                                                                JOptionPane.showMessageDialog(null, "Publisher name is missing. ERROR please contact admin");
                                                            }
                                                        } else {
                                                            JOptionPane.showMessageDialog(null, "Publisher Date is missing. ERROR Contact Admin.");
                                                        }
                                                    } else {
                                                        JOptionPane.showMessageDialog(null, "Quantity must be over 0. There cannot be a null value for this.");
                                                    }

                                                } catch (NumberFormatException e) {
                                                    JOptionPane.showMessageDialog(null, "Please enter in a numeric number.");
                                                }
                                            } else {
                                                JOptionPane.showMessageDialog(null, "Enter in quantity.");
                                            }

                                        } else {
                                            JOptionPane.showMessageDialog(null, "Price must be over $0.00");
                                        }
                                    } catch (NumberFormatException nfe) {
                                        JOptionPane.showMessageDialog(null, "Please enter valid price.");
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(null, "Enter in Valid Price.");
                                }
                            } else {
                                JOptionPane.showMessageDialog(null, "There is no first Name. Error.");
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "There is no Last Name. Error.");
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "There is no comic title. Error.");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "There is no Lookup Code. Error.");
                }
            } catch (NumberFormatException nfe) {
                JOptionPane.showMessageDialog(null, "fail. Error." + nfe);
            }
        } else {
            JOptionPane.showMessageDialog(null, "There is no Comic ID. Error 404.");
        }
    }//GEN-LAST:event_btnInventorySaveActionPerformed

    /**
     * HOLD PROCESSING
     */
    //Searching hold by customer phone number
    private void jbtnHoldSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnHoldSearchActionPerformed
        // TODO add your handling code here:
        ResultSetTableModel tableModel;
        try {
            if (!jtxtHoldPhone.getText().equals("")) {
                tableModel = new ResultSetTableModel(database.DB_LOCATION, database.DB_USER, database.DB_PASSWORD, "SELECT * FROM vw_Customers WHERE [Phone Number] LIKE '%" + jtxtCustomerPhone.getText() + "%'");
                jtDisplayHoldCustomers.setModel(tableModel);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Failed to populate table from the database. ");
        }
    }//GEN-LAST:event_jbtnHoldSearchActionPerformed

    private void jbtnHoldClearSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnHoldClearSearchActionPerformed
        // TODO add your handling code here:
        jtxtHoldPhone.setText("");
        jtDisplayHoldCustomers.setModel(new DefaultTableModel());
        jtDisplayHolds.setModel(new DefaultTableModel());
    }//GEN-LAST:event_jbtnHoldClearSearchActionPerformed

    private void jbtnHoldDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnHoldDeleteActionPerformed
        // TODO add your handling code here:
        if (jtDisplayHolds.getSelectedRow() != -1) {
            if (holdID != 0) {
                database.DeleteHoldsProcedure(holdID);
                jtxtHoldPhone.setText("");
                jtDisplayHoldCustomers.setModel(new DefaultTableModel());
                jtDisplayHolds.setModel(new DefaultTableModel());
            } else {
                JOptionPane.showMessageDialog(null, "Failed to retrieve Hold ID so the hold was not deleted. ");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please search for a customer by phone number and select one of their holds before attempting to delete the selected hold. ");
        }
    }//GEN-LAST:event_jbtnHoldDeleteActionPerformed

    private void jbtnHoldAddToTransactionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnHoldAddToTransactionActionPerformed
        // TODO add your handling code here:
        if (jtDisplayHolds.getSelectedRow() != -1) {
            if (holdID != 0) {
                List<TransactionItem> holdItems = new ArrayList<>();
                holdItems = database.QueryCustomOrderLineItems(holdID);
                for (TransactionItem item : holdItems) {
                    transactionItems.add(item);
                }

                DecimalFormat df = new DecimalFormat("#.00");
                double subtotal = 0;

                jlDisplayTransactionItems.removeAll();
                DefaultListModel<String> model = new DefaultListModel<>();
                for (TransactionItem item : transactionItems) {
                    model.addElement(item.toString());
                    subtotal += (item.getPrice() * item.getQuantity());
                }
                jlDisplayTransactionItems.setModel(model);
                double tax = subtotal * TAX_RATE;
                double total = subtotal + tax;
                jtxtSubtotal.setText(String.valueOf(df.format(subtotal)));
                jtxtTax.setText(String.valueOf(df.format(tax)));
                jtxtTotal.setText(String.valueOf(df.format(total)));

                JOptionPane.showMessageDialog(null, "Item(s) from the selected hold have been added to current transaction.");

                jPaneMain.setSelectedIndex(0);
                jtxtHoldPhone.setText("");
                jtDisplayHoldCustomers.setModel(new DefaultTableModel());
                jtDisplayHolds.setModel(new DefaultTableModel());

            } else {
                JOptionPane.showMessageDialog(null, "Failed to retrieve Hold ID so the items on hold were not added to the transaction. ");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please search for a customer by phone number and select one of their holds before attempting to add the selected hold to the current transaction. ");
        }
    }//GEN-LAST:event_jbtnHoldAddToTransactionActionPerformed

    private void jbtnCancelTransactionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCancelTransactionActionPerformed
        // TODO add your handling code here:
        transactionItems.clear();
        jlDisplayTransactionItems.setModel(new DefaultListModel<>());
        jtxtSubtotal.setText("");
        jtxtTax.setText("");
        jtxtTotal.setText("");
        jtxtCash.setText("");
        jtxtCredit.setText("");
        holdID = 0;

        jtxtTransactionItemSearchID.setText("");
        jtxtTransactionItemSearchName.setText("");

        jtDisplayTransactionComics.setModel(new DefaultTableModel());
        jtDisplayTransactionMiscItems.setModel(new DefaultTableModel());
    }//GEN-LAST:event_jbtnCancelTransactionActionPerformed

    //Complete the transaction CASH
    private void jbtnCompleteTransactionCashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCompleteTransactionCashActionPerformed
        // TODO add your handling code here:
        if (!jtxtTotal.getText().equals("")) {
            if (!jtxtCash.getText().equals("")) {
                try {
                    double cash = Double.parseDouble(jtxtCash.getText());
                    double total = Double.parseDouble(jtxtTotal.getText());
                    if (cash > total) {
                        if (database.InsertTransaction(total, empID)) {
                            for (TransactionItem item : transactionItems) {
                                database.InsertProcedureTransLineItem(item.getComicID(), item.getInventoryID(), item.getQuantity());
                            }
                            transactionItems.clear();
                            jlDisplayTransactionItems.setModel(new DefaultListModel<>());
                            jtxtSubtotal.setText("");
                            jtxtTax.setText("");
                            jtxtTotal.setText("");
                            jtxtCash.setText("");
                            database.DeleteHoldsProcedure(holdID);
                            holdID = 0;
                            jtxtHoldPhone.setText("");
                            jtDisplayHoldCustomers.setModel(new DefaultTableModel());
                            jtDisplayHolds.setModel(new DefaultTableModel());
                            try {
                                ResultSetTableModel tableModel = new ResultSetTableModel(database.DB_LOCATION, database.DB_USER, database.DB_PASSWORD, "SELECT * FROM vw_Comics_POS");
                                jtDisplayTransactionComics.setModel(tableModel);
                                tableModel = new ResultSetTableModel(database.DB_LOCATION, database.DB_USER, database.DB_PASSWORD, "SELECT * FROM vw_MiscItems");
                                jtDisplayTransactionMiscItems.setModel(tableModel);
                            } catch (SQLException ex) {
                                JOptionPane.showMessageDialog(null, "Failed to populate table from the database. ");
                            }
                        }
                        DecimalFormat df = new DecimalFormat("#.00");
                        JOptionPane.showMessageDialog(null, "Transaction complete. The customer's change is: $" + df.format(cash - total));
                    } else {
                        JOptionPane.showMessageDialog(null, "The amount of cash recieved must be greater than the total. ");
                    }
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "Please only enter the amount of cash recieved using only numbers. ");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Please enter the amount of cash recieved or change to the credit tab before attempting to complete the transaction. ");
            }
        } else {
            JOptionPane.showMessageDialog(null, "There is not currently a transaction to complete. ");
        }
    }//GEN-LAST:event_jbtnCompleteTransactionCashActionPerformed

    private void jbtnCompleteTransactionCreditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCompleteTransactionCreditActionPerformed
        // TODO add your handling code here:
        if (!jtxtTotal.getText().equals("")) {
            if (jtxtCredit.getText().matches("[1-9]?[0-9]{3}-[0-9]{4}-[0-9]{4}-[0-9]{4}")) {
                try {
                    double total = Double.parseDouble(jtxtTotal.getText());
                    if (database.InsertTransaction(total, empID)) {
                        for (TransactionItem item : transactionItems) {
                            database.InsertProcedureTransLineItem(item.getComicID(), item.getInventoryID(), item.getQuantity());
                        }
                        transactionItems.clear();
                        jlDisplayTransactionItems.setModel(new DefaultListModel<>());
                        jtxtSubtotal.setText("");
                        jtxtTax.setText("");
                        jtxtTotal.setText("");
                        jtxtCredit.setText("");
                        database.DeleteHoldsProcedure(holdID);
                        holdID = 0;
                        jtxtHoldPhone.setText("");
                        jtDisplayHoldCustomers.setModel(new DefaultTableModel());
                        jtDisplayHolds.setModel(new DefaultTableModel());
                        try {
                            ResultSetTableModel tableModel = new ResultSetTableModel(database.DB_LOCATION, database.DB_USER, database.DB_PASSWORD, "SELECT * FROM vw_Comics_POS");
                            jtDisplayTransactionComics.setModel(tableModel);
                            tableModel = new ResultSetTableModel(database.DB_LOCATION, database.DB_USER, database.DB_PASSWORD, "SELECT * FROM vw_MiscItems");
                            jtDisplayTransactionMiscItems.setModel(tableModel);
                        } catch (SQLException ex) {
                            JOptionPane.showMessageDialog(null, "Failed to populate table from the database. ");
                        }
                    }
                    JOptionPane.showMessageDialog(null, "Transaction complete. ");

                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "Please only enter the amount of cash recieved using only numbers. ");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Please enter a valid credit card number. ");
            }
        } else {
            JOptionPane.showMessageDialog(null, "There is not currently a transaction to complete. ");
        }
    }//GEN-LAST:event_jbtnCompleteTransactionCreditActionPerformed

    //Adding to process transaction
    private void jbtnTransactionAddItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnTransactionAddItemActionPerformed
        // TODO add your handling code here:
        //make sure something is selected
        if (!jtxtTSIComicOrInventoryID.getText().equals("") && !jtxtTSINameTitle.getText().equals("") && !jtxtTSIPrice.getText().equals("") && !jtxtTSIQuantity.getText().equals("")) {
            //see if selection is a comic
            if (jtDisplayTransactionComics.getSelectedRow() != -1) {
                //try to add the item to the arrayList
                try {
                    if (Integer.parseInt(jtxtTSIQuantity.getText()) <= Integer.parseInt(jtxtQuantityInStock.getText())) {
                        transactionItems.add(new TransactionItem(jtxtTSINameTitle.getText(), Double.parseDouble(jtxtTSIPrice.getText()), Integer.parseInt(jtxtTSIQuantity.getText()), Integer.parseInt(jtxtTSIComicOrInventoryID.getText()), 0));
                        //clear selection in preparation for next item
                        jtDisplayTransactionComics.clearSelection();
                        jtxtTSINameTitle.setText("");
                        jtxtTSIPrice.setText("");
                        jtxtTSIQuantity.setText("");
                        jtxtTSIComicOrInventoryID.setText("");

                        //update output for user
                        DecimalFormat df = new DecimalFormat("#.00");

                        double subtotal = 0;

                        jlDisplayTransactionItems.removeAll();
                        DefaultListModel<String> model = new DefaultListModel<>();
                        for (TransactionItem item : transactionItems) {
                            model.addElement(item.toString());
                            subtotal += (item.getPrice() * item.getQuantity());
                        }
                        jlDisplayTransactionItems.setModel(model);
                        double tax = subtotal * TAX_RATE;
                        double total = subtotal + tax;
                        jtxtSubtotal.setText(String.valueOf(df.format(subtotal)));
                        jtxtTax.setText(String.valueOf(df.format(tax)));
                        jtxtTotal.setText(String.valueOf(df.format(total)));
                    } else {
                        JOptionPane.showMessageDialog(null, "The desired quantity of this item is more than we currently have available in stock. Please reduce the quantity in order to add this to the transaction. If the quantity desired is 1 and you are seeing this message then the item is currently out of stock. ");
                    }
                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(null, "Quantity must be input as a whole number. ");
                }
            }
            //see if selection is a misc item
            if (jtDisplayTransactionMiscItems.getSelectedRow() != -1) {
                //try to add the item to the arrayList
                try {
                    transactionItems.add(new TransactionItem(jtxtTSINameTitle.getText(), Double.parseDouble(jtxtTSIPrice.getText()), Integer.parseInt(jtxtTSIQuantity.getText()), 0, Integer.parseInt(jtxtTSIComicOrInventoryID.getText())));

                    //clear selection in preparation for next item
                    jtDisplayTransactionMiscItems.clearSelection();
                    jtxtTSINameTitle.setText("");
                    jtxtTSIPrice.setText("");
                    jtxtTSIQuantity.setText("");
                    jtxtTSIComicOrInventoryID.setText("");

                    //update output for user
                    DecimalFormat df = new DecimalFormat("#.00");

                    double subtotal = 0;

                    jlDisplayTransactionItems.removeAll();
                    DefaultListModel<String> model = new DefaultListModel<>();
                    for (TransactionItem item : transactionItems) {
                        model.addElement(item.toString());
                        subtotal += (item.getPrice() * item.getQuantity());
                    }
                    jlDisplayTransactionItems.setModel(model);
                    double tax = subtotal * TAX_RATE;
                    double total = subtotal + tax;
                    jtxtSubtotal.setText(String.valueOf(df.format(subtotal)));
                    jtxtTax.setText(String.valueOf(df.format(tax)));
                    jtxtTotal.setText(String.valueOf(df.format(total)));

                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(null, "Quantity must be input as a whole number. ");
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "You cannot add a blank item to the current transaction. ");
        }
    }//GEN-LAST:event_jbtnTransactionAddItemActionPerformed

    private void jbtnTransactionRemoveItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnTransactionRemoveItemActionPerformed
        //remove selected item from transactionItems arrayList
        if (jlDisplayTransactionItems.getSelectedIndex() != -1) {
            transactionItems.remove(jlDisplayTransactionItems.getSelectedIndex());

            //update output for user
            double subtotal = 0;

            jlDisplayTransactionItems.removeAll();
            DefaultListModel<String> model = new DefaultListModel<>();
            for (TransactionItem item : transactionItems) {
                model.addElement(item.toString());
                subtotal += (item.getPrice() * item.getQuantity());
            }
            jlDisplayTransactionItems.setModel(model);
            double tax = subtotal * TAX_RATE;
            double total = subtotal + tax;
            jtxtSubtotal.setText(String.valueOf(subtotal));
            jtxtTax.setText(String.valueOf(tax));
            jtxtTotal.setText(String.valueOf(total));
        } else {
            JOptionPane.showMessageDialog(null, "Please select an item from the transaction items list before attempting to remove items. ");
        }
    }//GEN-LAST:event_jbtnTransactionRemoveItemActionPerformed

    private void jbtnTransactionSearchItems1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnTransactionSearchItems1ActionPerformed
        // TODO add your handling code here:
        try {
            ResultSetTableModel tableModel = new ResultSetTableModel(database.DB_LOCATION, database.DB_USER, database.DB_PASSWORD, "SELECT * FROM vw_Comics_POS");
            jtDisplayTransactionComics.setModel(tableModel);
            tableModel = new ResultSetTableModel(database.DB_LOCATION, database.DB_USER, database.DB_PASSWORD, "SELECT * FROM vw_MiscItems");
            jtDisplayTransactionMiscItems.setModel(tableModel);
            jtxtTransactionItemSearchID.setText("");
            jtxtTransactionItemSearchName.setText("");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Failed to populate table from the database. ");
        }
    }//GEN-LAST:event_jbtnTransactionSearchItems1ActionPerformed

    private void jbtnTransactionSearchItemsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnTransactionSearchItemsActionPerformed
        // TODO add your handling code here:
        try {
            ResultSetTableModel tableModel;
            if (!jtxtTransactionItemSearchID.getText().equals("")) {
                tableModel = new ResultSetTableModel(database.DB_LOCATION, database.DB_USER, database.DB_PASSWORD, "SELECT * FROM vw_Comics_POS WHERE [Lookup Code] LIKE '%" + jtxtTransactionItemSearchID.getText() + "%'");
                jtDisplayTransactionComics.setModel(tableModel);
                tableModel = new ResultSetTableModel(database.DB_LOCATION, database.DB_USER, database.DB_PASSWORD, "SELECT * FROM vw_MiscItems WHERE [ Lookup Code] LIKE '%" + jtxtTransactionItemSearchID.getText() + "%'");
                jtDisplayTransactionMiscItems.setModel(tableModel);
            } else if (!jtxtTransactionItemSearchName.getText().equals("")) {
                tableModel = new ResultSetTableModel(database.DB_LOCATION, database.DB_USER, database.DB_PASSWORD, "SELECT * FROM vw_Comics_POS WHERE Title LIKE '%" + jtxtTransactionItemSearchName.getText() + "%'");
                jtDisplayTransactionComics.setModel(tableModel);
                tableModel = new ResultSetTableModel(database.DB_LOCATION, database.DB_USER, database.DB_PASSWORD, "SELECT * FROM vw_MiscItems WHERE Item LIKE '%" + jtxtTransactionItemSearchName.getText() + "%'");
                jtDisplayTransactionMiscItems.setModel(tableModel);
            } else {
                JOptionPane.showMessageDialog(null, "Please enter a Lookup ID or a part of the product name or comic title to search.  If do have know this information, use the View All Items button instead. ");
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Failed to populate table from the database. " + ex);
        }
    }//GEN-LAST:event_jbtnTransactionSearchItemsActionPerformed

    private void jbtnViewAllCustomersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnViewAllCustomersActionPerformed
        // TODO add your handling code here:
        try {
            ResultSetTableModel tableModel = new ResultSetTableModel(database.DB_LOCATION, database.DB_USER, database.DB_PASSWORD, "SELECT * FROM vw_Customers");
            jtDisplayCustomers.setModel(tableModel);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Failed to populate table from the database. ");
        }
    }//GEN-LAST:event_jbtnViewAllCustomersActionPerformed

    private void jbtnAddCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnAddCustomerActionPerformed
        // TODO add your handling code here:
        String customerFirstName = jtxtCustomerFirstName.getText();
        String customerLastName = jtxtCustomerLastName.getText();
        String customerPhone = "";
        String customerEmail = "";

        if (jtxtCustomerFirstName.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Enter first name.");
        } else if (jtxtCustomerLastName.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Enter last name.");
        } else if (jtxtCustomerPhone.getText().matches("\\d{3}-\\d{3}-\\d{4}")) {
            customerPhone = jtxtCustomerPhone.getText();
            if (jtxtCustomerEmail.getText().matches("[a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+.[a-zA-Z]")) {//email
                customerEmail = jtxtCustomerEmail.getText();
                //inserting the data
                database.InsertCustomer(customerFirstName, customerLastName, customerPhone, customerEmail);

                jtxtCustomerLastName.setText("");
                jtxtCustomerFirstName.setText("");
                jtxtCustomerPhone.setText("");
                jtxtCustomerEmail.setText("");

            } else {
                JOptionPane.showMessageDialog(null, "Invalid email..");
                jtxtCustomerEmail.selectAll();
                jtxtCustomerEmail.requestFocus(true);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Invalid phone number..");
            jtxtEmployeePhone.selectAll();
            jtxtEmployeePhone.requestFocus(true);
        }
    }//GEN-LAST:event_jbtnAddCustomerActionPerformed

    private void jbtnSearchCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSearchCustomerActionPerformed
        // TODO add your handling code here:

        try {
            ResultSetTableModel tableModel;
            if (!jtxtCustomerPhone.getText().equals("")) {
                tableModel = new ResultSetTableModel(database.DB_LOCATION, database.DB_USER, database.DB_PASSWORD, "SELECT * FROM vw_Customers WHERE [Phone Number] LIKE '%" + jtxtCustomerPhone.getText() + "%'");
                jtDisplayCustomers.setModel(tableModel);
            } else if (!jtxtCustomerEmail.getText().equals("")) {
                tableModel = new ResultSetTableModel(database.DB_LOCATION, database.DB_USER, database.DB_PASSWORD, "SELECT * FROM vw_Customers WHERE Email LIKE '%" + jtxtCustomerEmail.getText() + "%'");
                jtDisplayCustomers.setModel(tableModel);
            } else if (!jtxtCustomerLastName.getText().equals("")) {
                tableModel = new ResultSetTableModel(database.DB_LOCATION, database.DB_USER, database.DB_PASSWORD, "SELECT * FROM vw_Customers WHERE [Last Name] LIKE '%" + jtxtCustomerLastName.getText() + "%'");
                jtDisplayCustomers.setModel(tableModel);
            } else if (!jtxtCustomerFirstName.getText().equals("")) {
                tableModel = new ResultSetTableModel(database.DB_LOCATION, database.DB_USER, database.DB_PASSWORD, "SELECT * FROM vw_Customers WHERE [First Name] LIKE '%" + jtxtCustomerFirstName.getText() + "%'");
                jtDisplayCustomers.setModel(tableModel);
            } else {
                JOptionPane.showMessageDialog(null, "Please fill in one of the customer information boxes before searching.  If do not know any of the customer's information, use the View Customers button instead. ");
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Failed to populate table from the database. ");
        }
    }//GEN-LAST:event_jbtnSearchCustomerActionPerformed

    private void jbtnSearchAllEmployeesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSearchAllEmployeesActionPerformed
        // TODO add your handling code here:
        try {
            ResultSetTableModel tableModel = new ResultSetTableModel(database.DB_LOCATION, database.DB_USER, database.DB_PASSWORD, "SELECT * FROM vw_Employees");
            jtDisplayEmployeesU.setModel(tableModel);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Failed to populate table from the database. ");
        }
    }//GEN-LAST:event_jbtnSearchAllEmployeesActionPerformed

    private void jbtnSearchEmployeeByStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSearchEmployeeByStatusActionPerformed
        // TODO add your handling code here:
        try {
            ResultSetTableModel tableModel;
            if (jcboxEmployeeStatusU.getSelectedIndex() == 0) {
                tableModel = new ResultSetTableModel(database.DB_LOCATION, database.DB_USER, database.DB_PASSWORD, "SELECT * FROM vw_Employees WHERE EmpStatusCode = 'AC'");
                jtDisplayEmployeesU.setModel(tableModel);
            } else if (jcboxEmployeeStatusU.getSelectedIndex() == 1) {
                tableModel = new ResultSetTableModel(database.DB_LOCATION, database.DB_USER, database.DB_PASSWORD, "SELECT * FROM vw_Employees WHERE EmpStatusCode = 'IN'");
                jtDisplayEmployeesU.setModel(tableModel);
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Failed to populate table from the database. ");
        }
    }//GEN-LAST:event_jbtnSearchEmployeeByStatusActionPerformed

    private void jbtnSearchEmployeeByTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSearchEmployeeByTypeActionPerformed
        // TODO add your handling code here:
        try {
            ResultSetTableModel tableModel;
            if (jcboxEmployeeTypeU.getSelectedIndex() == 0) {
                tableModel = new ResultSetTableModel(database.DB_LOCATION, database.DB_USER, database.DB_PASSWORD, "SELECT * FROM vw_Employees WHERE EmployeeType = 'RA'");
                jtDisplayEmployeesU.setModel(tableModel);
            } else if (jcboxEmployeeTypeU.getSelectedIndex() == 1) {
                tableModel = new ResultSetTableModel(database.DB_LOCATION, database.DB_USER, database.DB_PASSWORD, "SELECT * FROM vw_Employees WHERE EmployeeType = 'MG'");
                jtDisplayEmployeesU.setModel(tableModel);
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Failed to populate table from the database. ");
        }
    }//GEN-LAST:event_jbtnSearchEmployeeByTypeActionPerformed

    private void jbtnSearchEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSearchEmployeeActionPerformed
        // TODO add your handling code here:
        try {
            ResultSetTableModel tableModel;
            if (!jtxtEmployeePhoneU.getText().equals("")) {
                tableModel = new ResultSetTableModel(database.DB_LOCATION, database.DB_USER, database.DB_PASSWORD, "SELECT * FROM vw_Employees WHERE [Phone Number] LIKE '%" + jtxtEmployeePhoneU.getText() + "%'");
                jtDisplayEmployeesU.setModel(tableModel);
            } else if (!jtxtEmployeeLastNameU.getText().equals("")) {
                tableModel = new ResultSetTableModel(database.DB_LOCATION, database.DB_USER, database.DB_PASSWORD, "SELECT * FROM vw_Employees WHERE [Last Name] LIKE '%" + jtxtEmployeeLastNameU.getText() + "%'");
                jtDisplayEmployeesU.setModel(tableModel);
            } else if (!jtxtEmployeeFirstNameU.getText().equals("")) {
                tableModel = new ResultSetTableModel(database.DB_LOCATION, database.DB_USER, database.DB_PASSWORD, "SELECT * FROM vw_Employees WHERE [First Name] LIKE '%" + jtxtEmployeeFirstNameU.getText() + "%'");
                jtDisplayEmployeesU.setModel(tableModel);
            } else {
                JOptionPane.showMessageDialog(null, "Please fill in a name or phone number before attempting to search.  If do not know any of the employee's information, use the View All Employees button instead. ");
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Failed to populate table from the database. ");
        }
    }//GEN-LAST:event_jbtnSearchEmployeeActionPerformed

    private void jbtnUpdateEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnUpdateEmployeeActionPerformed
        String nameFirst = "";
        String nameLast = "";
        String employeeType = "";
        String phone = "";

        String state = "";
        String address = "";
        String zip = "";
        String statusCode = "";
        String city = "";
        String ID = "";

        try {
            ID = jtDisplayEmployeesU.getModel().getValueAt(jtDisplayEmployeesU.getSelectedRow(), 0).toString();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Please select the employee you wish to update before trying to make changes. ");
        }

        if (!jtxtEmployeeFirstNameU.getText().matches("")) {
            nameFirst = jtxtEmployeeFirstNameU.getText();
            if (!jtxtEmployeeLastNameU.getText().matches("")) {
                nameLast = jtxtEmployeeLastNameU.getText();
                if (!jtxtEmployeeAddressU.getText().equals("")) {
                    address = jtxtEmployeeAddressU.getText();
                    if (!jtxtEmployeeCityU.getText().equals("")) {
                        city = jtxtEmployeeCityU.getText();
                        if (jtxtEmployeeStateU.getText().length() == 2) {
                            state = jtxtEmployeeStateU.getText();
                            if (jtxtEmployeeZIPU.getText().length() == 5) {
                                zip = jtxtEmployeeZIPU.getText();
                                if (jtxtEmployeePhoneU.getText().matches("[1-9]\\d{2}-\\d{3}-\\d{4}")) {
                                    phone = jtxtEmployeePhoneU.getText();

                                    if (jcboxEmployeeTypeU.getSelectedIndex() == 0) {
                                        employeeType = "RA";
                                    } else if (jcboxEmployeeTypeU.getSelectedIndex() == 1) {
                                        employeeType = "MG";
                                    }

                                    if (jcboxEmployeeStatusU.getSelectedIndex() == 0) {
                                        statusCode = "AC";
                                    } else if (jcboxEmployeeStatusU.getSelectedIndex() == 1) {
                                        statusCode = "IN";
                                    }

                                    //save employee changes to Database
                                    database.UpdateEmployee(nameFirst, nameLast, employeeType, phone, address, city, state, zip, statusCode, ID);

                                    //reset to defaults
                                    jtxtEmployeeFirstNameU.setText("");
                                    jtxtEmployeeLastNameU.setText("");
                                    jtxtEmployeeAddressU.setText("");
                                    jtxtEmployeeCityU.setText("");
                                    jtxtEmployeeStateU.setText("");
                                    jtxtEmployeeZIPU.setText("");
                                    jtxtEmployeePhoneU.setText("");
                                    jcboxEmployeeTypeU.setSelectedIndex(0);
                                    jcboxEmployeeStatusU.setSelectedIndex(0);

                                } else {
                                    JOptionPane.showMessageDialog(null, "Invalid phone number..");
                                    jtxtEmployeePhoneU.selectAll();
                                    jtxtEmployeePhoneU.requestFocus(true);
                                }
                            } else {
                                JOptionPane.showMessageDialog(null, "Please enter a 5 digit zip code. ");
                                jtxtEmployeeZIPU.requestFocus();
                                jtxtEmployeeZIPU.selectAll();
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "Please enter a two character state code (Example: NC for North Carolina).");
                            jtxtEmployeeStateU.requestFocus();
                            jtxtEmployeeStateU.selectAll();
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Please enter a city. ");
                        jtxtEmployeeCityU.requestFocus();
                        jtxtEmployeeCityU.selectAll();
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Please enter a street address. ");
                    jtxtEmployeeAddressU.requestFocus();
                    jtxtEmployeeAddressU.selectAll();
                }
            } else {
                JOptionPane.showMessageDialog(null, "Please enter the employee's name. ");
                jtxtEmployeeLastNameU.selectAll();
                jtxtEmployeeLastNameU.requestFocus(true);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please enter the employee's name. ");
            jtxtEmployeeFirstNameU.selectAll();
            jtxtEmployeeFirstNameU.requestFocus(true);
        }

    }//GEN-LAST:event_jbtnUpdateEmployeeActionPerformed

    private void jbtnGenerateUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnGenerateUsernameActionPerformed
        // TODO add your handling code here:
        String nameFirst = "";
        String nameLast = "";
        String username = "";

        if (!jtxtEmployeeFirstName.getText().matches("")) {
            nameFirst = jtxtEmployeeFirstName.getText();
            if (!jtxtEmployeeLastName.getText().matches("")) {
                nameLast = jtxtEmployeeLastName.getText();

                username = nameLast + nameFirst.substring(0, 1);
                jtxtEmployeeUsername.setText(username);
            } else {
                JOptionPane.showMessageDialog(null, "You must enter the employee information before generating a username. ");
                jtxtEmployeeLastName.selectAll();
                jtxtEmployeeLastName.requestFocus(true);
            }
        } else {
            JOptionPane.showMessageDialog(null, "You must enter the employee information before generating a username. ");
            jtxtEmployeeFirstName.selectAll();
            jtxtEmployeeFirstName.requestFocus(true);
        }
    }//GEN-LAST:event_jbtnGenerateUsernameActionPerformed

    private void jbtnAddEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnAddEmployeeActionPerformed
        String nameFirst;
        String nameLast;
        String employeeType = "RA";
        String phone;
        String username;
        String password;
        String state;
        String address;
        String zip;
        String statuscode = "AC";
        String city;

        if (!jtxtEmployeeFirstName.getText().matches("")) {
            nameFirst = jtxtEmployeeFirstName.getText();
            if (!jtxtEmployeeLastName.getText().matches("")) {
                nameLast = jtxtEmployeeLastName.getText();
                if (!jtxtEmployeeAddress.getText().equals("")) {
                    address = jtxtEmployeeAddress.getText();
                    if (!jtxtEmployeeCity.getText().equals("")) {
                        city = jtxtEmployeeCity.getText();
                        if (jtxtEmployeeState.getText().length() == 2) {
                            state = jtxtEmployeeState.getText();
                            if (jtxtEmployeeZIP.getText().length() == 5) {
                                zip = jtxtEmployeeZIP.getText();
                                if (jtxtEmployeePhone.getText().matches("[1-9]\\d{2}-\\d{3}-\\d{4}")) {
                                    phone = jtxtEmployeePhone.getText();
                                    if (jtxtEmployeeUsername.getText().equals("")) {
                                        JOptionPane.showMessageDialog(null, "Please generate a username before attempting to add the employee. ");
                                        jtxtEmployeeUsername.selectAll();
                                        jtxtEmployeeUsername.requestFocus();
                                    } else {
                                        username = jtxtEmployeeUsername.getText();
                                        if (database.QueryUsernameExists(username)) {
                                            JOptionPane.showMessageDialog(null, "The generated username is already in use by another employee.  Please alter the username in some way to make it unique. ");
                                            jtxtEmployeeUsername.requestFocus();
                                        } else if (jpwEmployeePass.getText().length() >= 8 && jpwEmployeePass.getText().length() <= 20) {
                                            password = jpwEmployeePass.getText();
                                            if (jcboxEmployeeType.getSelectedIndex() == 0) {
                                                employeeType = "RA";
                                            } else if (jcboxEmployeeType.getSelectedIndex() == 1) {
                                                employeeType = "MG";
                                            }

                                            //save new employee to Database
                                            database.InsertEmployee(nameFirst, nameLast, employeeType, phone, address, city, state, zip, statuscode);
                                            database.InsertEmployeeLogin(database.QueryNewEmployeeID(), username, password);

                                            //clear fields
                                            jtxtEmployeeFirstName.setText("");
                                            jtxtEmployeeLastName.setText("");
                                            jtxtEmployeeAddress.setText("");
                                            jtxtEmployeeCity.setText("");
                                            jtxtEmployeeState.setText("");
                                            jtxtEmployeeZIP.setText("");
                                            jtxtEmployeePhone.setText("");
                                            jcboxEmployeeType.setSelectedIndex(0);
                                            jtxtEmployeeUsername.setText("");
                                            jpwEmployeePass.setText("");

                                        } else {
                                            JOptionPane.showMessageDialog(null, "Password must have a length between 8 and 20 characters.");
                                        }
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(null, "Invalid phone number. ");
                                    jtxtEmployeePhone.selectAll();
                                    jtxtEmployeePhone.requestFocus(true);
                                }
                            } else {
                                JOptionPane.showMessageDialog(null, "Please enter a 5 digit zip code. ");
                                jtxtEmployeeZIP.requestFocus();
                                jtxtEmployeeZIP.selectAll();
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "Please enter a two character state code (Example: NC for North Carolina).");
                            jtxtEmployeeState.requestFocus();
                            jtxtEmployeeState.selectAll();
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Please enter a city. ");
                        jtxtEmployeeCity.requestFocus();
                        jtxtEmployeeCity.selectAll();
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Please enter a street address. ");
                    jtxtEmployeeAddress.requestFocus();
                    jtxtEmployeeAddress.selectAll();
                }
            } else {
                JOptionPane.showMessageDialog(null, "Please enter the employee's name. ");
                jtxtEmployeeLastName.selectAll();
                jtxtEmployeeLastName.requestFocus(true);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please enter the employee's name. ");
            jtxtEmployeeFirstName.selectAll();
            jtxtEmployeeFirstName.requestFocus(true);
        }
    }//GEN-LAST:event_jbtnAddEmployeeActionPerformed

    private void jcbReportSelectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbReportSelectionActionPerformed
        // TODO add your handling code here:
        switch (jcbReportSelection.getSelectedIndex()) {
            case 0:
                jlblFilter.setEnabled(false);
                jtfFilter.setEnabled(false);
                break;
            case 1:
                jlblFilter.setEnabled(true);
                jlblFilter.setText("Month: ");
                jtfFilter.setEnabled(true);
                break;
            case 2:
                jlblFilter.setEnabled(true);
                jlblFilter.setText("Employee Name: ");
                jtfFilter.setEnabled(true);
                break;
            case 3:
                jlblFilter.setEnabled(true);
                jlblFilter.setText("Product Name/Title: ");
                jtfFilter.setEnabled(true);
                break;
            default:
                break;
        }
    }//GEN-LAST:event_jcbReportSelectionActionPerformed

    private void jbtnReportGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnReportGenerateActionPerformed
        // TODO add your handling code here:
        ResultSetTableModel tableModel;
        switch (jcbReportSelection.getSelectedIndex()) {
            case 0:
                try {
                    tableModel = new ResultSetTableModel(database.DB_LOCATION, database.DB_USER, database.DB_PASSWORD, "SELECT * FROM vw_Total_Sales"); //needs sql statement
                    jtDisplayReports.setModel(tableModel);
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Failed to populate table from the database. ");
                }
                break;
            case 1:
                try {
                    if (jtfFilter.getText().equals("")) {
                        tableModel = new ResultSetTableModel(database.DB_LOCATION, database.DB_USER, database.DB_PASSWORD, "SELECT * FROM vw_Sales_by_Month"); //needs sql statement
                        jtDisplayReports.setModel(tableModel);
                    } else {
                        tableModel = new ResultSetTableModel(database.DB_LOCATION, database.DB_USER, database.DB_PASSWORD, "SELECT * FROM vw_Sales_by_Month WHERE [Month] LIKE '%" + jtfFilter.getText() + "%'"); //needs sql statement
                        jtDisplayReports.setModel(tableModel);
                    }

                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Failed to populate table from the database. ");
                }
                break;
            case 2:
                try {
                    if (jtfFilter.getText().equals("")) {
                        tableModel = new ResultSetTableModel(database.DB_LOCATION, database.DB_USER, database.DB_PASSWORD, "SELECT * FROM vw_Total_Sales_by_Employees"); //needs sql statement
                        jtDisplayReports.setModel(tableModel);
                    } else {
                        tableModel = new ResultSetTableModel(database.DB_LOCATION, database.DB_USER, database.DB_PASSWORD, "SELECT * FROM vw_Total_Sales_by_Employees WHERE [Employee ] LIKE '%" + jtfFilter.getText() + "%'"); //needs sql statement
                        jtDisplayReports.setModel(tableModel);
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Failed to populate table from the database. ");
                }
                break;
            case 3:
                try {
                    if (jtfFilter.getText().equals("")) {
                        tableModel = new ResultSetTableModel(database.DB_LOCATION, database.DB_USER, database.DB_PASSWORD, "SELECT * FROM vw_Amount_SoldBy_Item"); //needs sql statement
                        jtDisplayReports.setModel(tableModel);
                    } else {
                        tableModel = new ResultSetTableModel(database.DB_LOCATION, database.DB_USER, database.DB_PASSWORD, "SELECT * FROM vw_Amount_SoldBy_Item WHERE [Product] LIKE '%" + jtfFilter.getText() + "%'"); //needs sql statement
                        jtDisplayReports.setModel(tableModel);
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Failed to populate table from the database. ");
                    System.out.println(ex);
                }
                break;
            default:
                break;
        }
    }//GEN-LAST:event_jbtnReportGenerateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnInventoryAdd;
    private javax.swing.JButton btnInventoryCancel;
    private javax.swing.JButton btnInventoryClear;
    private javax.swing.JButton btnInventoryComicDisplayAll;
    private javax.swing.JButton btnInventoryEdit;
    private javax.swing.JButton btnInventoryMiscAdd;
    private javax.swing.JButton btnInventoryMiscCancel;
    private javax.swing.JButton btnInventoryMiscClear;
    private javax.swing.JButton btnInventoryMiscDisplayAll;
    private javax.swing.JButton btnInventoryMiscEdit;
    private javax.swing.JButton btnInventoryMiscSave;
    private javax.swing.JButton btnInventorySave;
    private javax.swing.JDesktopPane jDesktopPane2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    public javax.swing.JTabbedPane jPaneMain;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JButton jbtnAddCustomer;
    private javax.swing.JButton jbtnAddEmployee;
    private javax.swing.JButton jbtnCancelTransaction;
    private javax.swing.JButton jbtnCompleteTransactionCash;
    private javax.swing.JButton jbtnCompleteTransactionCredit;
    private javax.swing.JButton jbtnGenerateUsername;
    private javax.swing.JButton jbtnHoldAddToTransaction;
    private javax.swing.JButton jbtnHoldClearSearch;
    private javax.swing.JButton jbtnHoldDelete;
    private javax.swing.JButton jbtnHoldSearch;
    private javax.swing.JButton jbtnInventoryComicAdd;
    private javax.swing.JButton jbtnInventoryMiscAdd;
    private javax.swing.JButton jbtnInventorySearchComic;
    private javax.swing.JButton jbtnInventorySearchMisc;
    private javax.swing.JButton jbtnReportGenerate;
    private javax.swing.JButton jbtnSearchAllEmployees;
    private javax.swing.JButton jbtnSearchCustomer;
    private javax.swing.JButton jbtnSearchEmployee;
    private javax.swing.JButton jbtnSearchEmployeeByStatus;
    private javax.swing.JButton jbtnSearchEmployeeByType;
    private javax.swing.JButton jbtnTransactionAddItem;
    private javax.swing.JButton jbtnTransactionRemoveItem;
    private javax.swing.JButton jbtnTransactionSearchItems;
    private javax.swing.JButton jbtnTransactionSearchItems1;
    private javax.swing.JButton jbtnUpdateEmployee;
    private javax.swing.JButton jbtnViewAllCustomers;
    private javax.swing.JComboBox<String> jcbReportSelection;
    private javax.swing.JComboBox jcboxEmployeeStatusU;
    private javax.swing.JComboBox jcboxEmployeeType;
    private javax.swing.JComboBox jcboxEmployeeTypeU;
    private javax.swing.JList<String> jlDisplayTransactionItems;
    private javax.swing.JLabel jlblFilter;
    protected javax.swing.JLabel jlblWelcome;
    private javax.swing.JPasswordField jpwEmployeePass;
    private javax.swing.JTable jtDisplayComicsTable;
    private javax.swing.JTable jtDisplayCustomers;
    private javax.swing.JTable jtDisplayEmployeesU;
    private javax.swing.JTable jtDisplayHoldCustomers;
    private javax.swing.JTable jtDisplayHolds;
    private javax.swing.JTable jtDisplayMiscTable;
    private javax.swing.JTable jtDisplayReports;
    private javax.swing.JTable jtDisplayTransactionComics;
    private javax.swing.JTable jtDisplayTransactionMiscItems;
    private javax.swing.JTabbedPane jtabInventory;
    private javax.swing.JTextField jtfFilter;
    private javax.swing.JTextField jtxtCash;
    private javax.swing.JTextField jtxtCredit;
    private javax.swing.JTextField jtxtCustomerEmail;
    private javax.swing.JTextField jtxtCustomerFirstName;
    private javax.swing.JTextField jtxtCustomerLastName;
    private javax.swing.JTextField jtxtCustomerPhone;
    private javax.swing.JTextField jtxtEmployeeAddress;
    private javax.swing.JTextField jtxtEmployeeAddressU;
    private javax.swing.JTextField jtxtEmployeeCity;
    private javax.swing.JTextField jtxtEmployeeCityU;
    private javax.swing.JTextField jtxtEmployeeFirstName;
    private javax.swing.JTextField jtxtEmployeeFirstNameU;
    private javax.swing.JTextField jtxtEmployeeLastName;
    private javax.swing.JTextField jtxtEmployeeLastNameU;
    private javax.swing.JTextField jtxtEmployeePhone;
    private javax.swing.JTextField jtxtEmployeePhoneU;
    private javax.swing.JTextField jtxtEmployeeState;
    private javax.swing.JTextField jtxtEmployeeStateU;
    private javax.swing.JTextField jtxtEmployeeUsername;
    private javax.swing.JTextField jtxtEmployeeZIP;
    private javax.swing.JTextField jtxtEmployeeZIPU;
    private javax.swing.JTextField jtxtHoldPhone;
    private javax.swing.JTextField jtxtInvComicLookupID;
    private javax.swing.JTextField jtxtInvMiscLookupID;
    private javax.swing.JTextField jtxtInventoryAuthorName;
    private javax.swing.JTextField jtxtInventoryComicID;
    private javax.swing.JTextField jtxtInventoryComicTitle;
    private javax.swing.JTextField jtxtInventoryLastName;
    private javax.swing.JTextField jtxtInventoryMiscInvID;
    private javax.swing.JTextField jtxtInventoryMiscProductName;
    private javax.swing.JTextField jtxtInventoryMiscProductPrice;
    private javax.swing.JTextField jtxtInventoryMiscProductQuantity;
    private javax.swing.JTextField jtxtInventoryMiscSearchKey;
    private javax.swing.JTextField jtxtInventoryPrice;
    private javax.swing.JTextField jtxtInventoryPublisher;
    private javax.swing.JTextField jtxtInventoryPublisherDate;
    private javax.swing.JTextField jtxtInventoryQuantity;
    private javax.swing.JTextField jtxtInventorySearchKey;
    private javax.swing.JTextField jtxtQuantityInStock;
    private javax.swing.JTextField jtxtSubtotal;
    private javax.swing.JTextField jtxtTSIComicOrInventoryID;
    private javax.swing.JTextField jtxtTSINameTitle;
    private javax.swing.JTextField jtxtTSIPrice;
    private javax.swing.JTextField jtxtTSIQuantity;
    private javax.swing.JTextField jtxtTax;
    private javax.swing.JTextField jtxtTotal;
    private javax.swing.JTextField jtxtTransactionItemSearchID;
    private javax.swing.JTextField jtxtTransactionItemSearchName;
    private javax.swing.JPanel pnlComics;
    private javax.swing.JPanel pnlCustomer;
    private javax.swing.JPanel pnlEmployee;
    private javax.swing.JPanel pnlHoldProcessing;
    private javax.swing.JPanel pnlMisc;
    private javax.swing.JPanel pnlReports;
    private javax.swing.JPanel pnlSales;
    // End of variables declaration//GEN-END:variables
}
